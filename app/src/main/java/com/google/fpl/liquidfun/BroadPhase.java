/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.google.fpl.liquidfun;

public class BroadPhase {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected BroadPhase(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(BroadPhase obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(BroadPhase obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings({"deprecation", "removal"})
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        liquidfunJNI.delete_BroadPhase(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public BroadPhase() {
    this(liquidfunJNI.new_BroadPhase(), true);
  }

  public int createProxy(AABB aabb, java.lang.Object userData) {
    return liquidfunJNI.BroadPhase_createProxy(swigCPtr, this, AABB.getCPtr(aabb), aabb, userData);
  }

  public void destroyProxy(int proxyId) {
    liquidfunJNI.BroadPhase_destroyProxy(swigCPtr, this, proxyId);
  }

  public void moveProxy(int proxyId, AABB aabb, Vec2 displacement) {
    liquidfunJNI.BroadPhase_moveProxy(swigCPtr, this, proxyId, AABB.getCPtr(aabb), aabb, Vec2.getCPtr(displacement), displacement);
  }

  public void touchProxy(int proxyId) {
    liquidfunJNI.BroadPhase_touchProxy(swigCPtr, this, proxyId);
  }

  public AABB getFatAABB(int proxyId) {
    return new AABB(liquidfunJNI.BroadPhase_getFatAABB(swigCPtr, this, proxyId), false);
  }

  public java.lang.Object getUserData(int proxyId) {
    return liquidfunJNI.BroadPhase_getUserData(swigCPtr, this, proxyId);
  }

  public boolean testOverlap(int proxyIdA, int proxyIdB) {
    return liquidfunJNI.BroadPhase_testOverlap(swigCPtr, this, proxyIdA, proxyIdB);
  }

  public int getProxyCount() {
    return liquidfunJNI.BroadPhase_getProxyCount(swigCPtr, this);
  }

  public int getTreeHeight() {
    return liquidfunJNI.BroadPhase_getTreeHeight(swigCPtr, this);
  }

  public int getTreeBalance() {
    return liquidfunJNI.BroadPhase_getTreeBalance(swigCPtr, this);
  }

  public float getTreeQuality() {
    return liquidfunJNI.BroadPhase_getTreeQuality(swigCPtr, this);
  }

  public void shiftOrigin(Vec2 newOrigin) {
    liquidfunJNI.BroadPhase_shiftOrigin(swigCPtr, this, Vec2.getCPtr(newOrigin), newOrigin);
  }

  public final static int e_nullProxy = liquidfunJNI.BroadPhase_e_nullProxy_get();

}
