/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.google.fpl.liquidfun;

public class EdgeShape extends Shape {
  private transient long swigCPtr;

  protected EdgeShape(long cPtr, boolean cMemoryOwn) {
    super(liquidfunJNI.EdgeShape_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(EdgeShape obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(EdgeShape obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings({"deprecation", "removal"})
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        liquidfunJNI.delete_EdgeShape(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public EdgeShape() {
    this(liquidfunJNI.new_EdgeShape(), true);
  }

  public void set(Vec2 v1, Vec2 v2) {
    liquidfunJNI.EdgeShape_set__SWIG_0(swigCPtr, this, Vec2.getCPtr(v1), v1, Vec2.getCPtr(v2), v2);
  }

  public Shape clone(BlockAllocator allocator) {
    long cPtr = liquidfunJNI.EdgeShape_clone(swigCPtr, this, BlockAllocator.getCPtr(allocator), allocator);
    return (cPtr == 0) ? null : new Shape(cPtr, false);
  }

  public int getChildCount() {
    return liquidfunJNI.EdgeShape_getChildCount(swigCPtr, this);
  }

  public boolean testPoint(Transform transform, Vec2 p) {
    return liquidfunJNI.EdgeShape_testPoint(swigCPtr, this, Transform.getCPtr(transform), transform, Vec2.getCPtr(p), p);
  }

  public void computeDistance(Transform xf, Vec2 p, SWIGTYPE_p_float distance, Vec2 normal, int childIndex) {
    liquidfunJNI.EdgeShape_computeDistance(swigCPtr, this, Transform.getCPtr(xf), xf, Vec2.getCPtr(p), p, SWIGTYPE_p_float.getCPtr(distance), Vec2.getCPtr(normal), normal, childIndex);
  }

  public boolean rayCast(RayCastOutput output, RayCastInput input, Transform transform, int childIndex) {
    return liquidfunJNI.EdgeShape_rayCast(swigCPtr, this, RayCastOutput.getCPtr(output), output, RayCastInput.getCPtr(input), input, Transform.getCPtr(transform), transform, childIndex);
  }

  public void computeAABB(AABB aabb, Transform transform, int childIndex) {
    liquidfunJNI.EdgeShape_computeAABB(swigCPtr, this, AABB.getCPtr(aabb), aabb, Transform.getCPtr(transform), transform, childIndex);
  }

  public void computeMass(MassData massData, float density) {
    liquidfunJNI.EdgeShape_computeMass(swigCPtr, this, MassData.getCPtr(massData), massData, density);
  }

  public void set(float vx1, float vy1, float vx2, float vy2) {
    liquidfunJNI.EdgeShape_set__SWIG_1(swigCPtr, this, vx1, vy1, vx2, vy2);
  }

  public void setVertex1(Vec2 value) {
    liquidfunJNI.EdgeShape_vertex1_set(swigCPtr, this, Vec2.getCPtr(value), value);
  }

  public Vec2 getVertex1() {
    return new Vec2(liquidfunJNI.EdgeShape_vertex1_get(swigCPtr, this), false);
  }

  public void setVertex2(Vec2 value) {
    liquidfunJNI.EdgeShape_vertex2_set(swigCPtr, this, Vec2.getCPtr(value), value);
  }

  public Vec2 getVertex2() {
    return new Vec2(liquidfunJNI.EdgeShape_vertex2_get(swigCPtr, this), false);
  }

  public void setVertex0(Vec2 value) {
    liquidfunJNI.EdgeShape_vertex0_set(swigCPtr, this, Vec2.getCPtr(value), value);
  }

  public Vec2 getVertex0() {
    return new Vec2(liquidfunJNI.EdgeShape_vertex0_get(swigCPtr, this), false);
  }

  public void setVertex3(Vec2 value) {
    liquidfunJNI.EdgeShape_vertex3_set(swigCPtr, this, Vec2.getCPtr(value), value);
  }

  public Vec2 getVertex3() {
    return new Vec2(liquidfunJNI.EdgeShape_vertex3_get(swigCPtr, this), false);
  }

  public void setHasVertex0(boolean value) {
    liquidfunJNI.EdgeShape_hasVertex0_set(swigCPtr, this, value);
  }

  public boolean getHasVertex0() {
    return liquidfunJNI.EdgeShape_hasVertex0_get(swigCPtr, this);
  }

  public void setHasVertex3(boolean value) {
    liquidfunJNI.EdgeShape_hasVertex3_set(swigCPtr, this, value);
  }

  public boolean getHasVertex3() {
    return liquidfunJNI.EdgeShape_hasVertex3_get(swigCPtr, this);
  }

}
