/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.google.fpl.liquidfun;

public class GearJoint {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected GearJoint(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(GearJoint obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(GearJoint obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings({"deprecation", "removal"})
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        liquidfunJNI.delete_GearJoint(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public Vec2 getAnchorA() {
    return new Vec2(liquidfunJNI.GearJoint_getAnchorA(swigCPtr, this), true);
  }

  public Vec2 getAnchorB() {
    return new Vec2(liquidfunJNI.GearJoint_getAnchorB(swigCPtr, this), true);
  }

  public Vec2 getReactionForce(float inv_dt) {
    return new Vec2(liquidfunJNI.GearJoint_getReactionForce(swigCPtr, this, inv_dt), true);
  }

  public float getReactionTorque(float inv_dt) {
    return liquidfunJNI.GearJoint_getReactionTorque(swigCPtr, this, inv_dt);
  }

  public Joint getJoint1() {
    long cPtr = liquidfunJNI.GearJoint_getJoint1(swigCPtr, this);
    return (cPtr == 0) ? null : new Joint(cPtr, false);
  }

  public Joint getJoint2() {
    long cPtr = liquidfunJNI.GearJoint_getJoint2(swigCPtr, this);
    return (cPtr == 0) ? null : new Joint(cPtr, false);
  }

  public void setRatio(float ratio) {
    liquidfunJNI.GearJoint_setRatio(swigCPtr, this, ratio);
  }

  public float getRatio() {
    return liquidfunJNI.GearJoint_getRatio(swigCPtr, this);
  }

  public void dump() {
    liquidfunJNI.GearJoint_dump(swigCPtr, this);
  }

}
