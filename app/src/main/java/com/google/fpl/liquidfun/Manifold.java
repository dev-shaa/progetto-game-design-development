/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.google.fpl.liquidfun;

public class Manifold {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected Manifold(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Manifold obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(Manifold obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings({"deprecation", "removal"})
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        liquidfunJNI.delete_Manifold(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setPoints(ManifoldPoint value) {
    liquidfunJNI.Manifold_points_set(swigCPtr, this, ManifoldPoint.getCPtr(value), value);
  }

  public ManifoldPoint getPoints() {
    long cPtr = liquidfunJNI.Manifold_points_get(swigCPtr, this);
    return (cPtr == 0) ? null : new ManifoldPoint(cPtr, false);
  }

  public void setLocalNormal(Vec2 value) {
    liquidfunJNI.Manifold_localNormal_set(swigCPtr, this, Vec2.getCPtr(value), value);
  }

  public Vec2 getLocalNormal() {
    return new Vec2(liquidfunJNI.Manifold_localNormal_get(swigCPtr, this), false);
  }

  public void setLocalPoint(Vec2 value) {
    liquidfunJNI.Manifold_localPoint_set(swigCPtr, this, Vec2.getCPtr(value), value);
  }

  public Vec2 getLocalPoint() {
    return new Vec2(liquidfunJNI.Manifold_localPoint_get(swigCPtr, this), false);
  }

  public void setType(Manifold.Type value) {
    liquidfunJNI.Manifold_type_set(swigCPtr, this, value.swigValue());
  }

  public Manifold.Type getType() {
    return Manifold.Type.swigToEnum(liquidfunJNI.Manifold_type_get(swigCPtr, this));
  }

  public void setPointCount(int value) {
    liquidfunJNI.Manifold_pointCount_set(swigCPtr, this, value);
  }

  public int getPointCount() {
    return liquidfunJNI.Manifold_pointCount_get(swigCPtr, this);
  }

  public Manifold() {
    this(liquidfunJNI.new_Manifold(), true);
  }

  public final static class Type {
    public final static Manifold.Type e_circles = new Manifold.Type("e_circles");
    public final static Manifold.Type e_faceA = new Manifold.Type("e_faceA");
    public final static Manifold.Type e_faceB = new Manifold.Type("e_faceB");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static Type swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + Type.class + " with value " + swigValue);
    }

    private Type(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private Type(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private Type(String swigName, Type swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static Type[] swigValues = { e_circles, e_faceA, e_faceB };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
