/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.google.fpl.liquidfun;

public class ParticleBodyContact {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected ParticleBodyContact(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ParticleBodyContact obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(ParticleBodyContact obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings({"deprecation", "removal"})
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        liquidfunJNI.delete_ParticleBodyContact(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setIndex(int value) {
    liquidfunJNI.ParticleBodyContact_index_set(swigCPtr, this, value);
  }

  public int getIndex() {
    return liquidfunJNI.ParticleBodyContact_index_get(swigCPtr, this);
  }

  public void setBody(Body value) {
    liquidfunJNI.ParticleBodyContact_body_set(swigCPtr, this, Body.getCPtr(value), value);
  }

  public Body getBody() {
    long cPtr = liquidfunJNI.ParticleBodyContact_body_get(swigCPtr, this);
    return (cPtr == 0) ? null : new Body(cPtr, false);
  }

  public void setFixture(Fixture value) {
    liquidfunJNI.ParticleBodyContact_fixture_set(swigCPtr, this, Fixture.getCPtr(value), value);
  }

  public Fixture getFixture() {
    long cPtr = liquidfunJNI.ParticleBodyContact_fixture_get(swigCPtr, this);
    return (cPtr == 0) ? null : new Fixture(cPtr, false);
  }

  public void setWeight(float value) {
    liquidfunJNI.ParticleBodyContact_weight_set(swigCPtr, this, value);
  }

  public float getWeight() {
    return liquidfunJNI.ParticleBodyContact_weight_get(swigCPtr, this);
  }

  public void setNormal(Vec2 value) {
    liquidfunJNI.ParticleBodyContact_normal_set(swigCPtr, this, Vec2.getCPtr(value), value);
  }

  public Vec2 getNormal() {
    return new Vec2(liquidfunJNI.ParticleBodyContact_normal_get(swigCPtr, this), false);
  }

  public void setMass(float value) {
    liquidfunJNI.ParticleBodyContact_mass_set(swigCPtr, this, value);
  }

  public float getMass() {
    return liquidfunJNI.ParticleBodyContact_mass_get(swigCPtr, this);
  }

  public ParticleBodyContact() {
    this(liquidfunJNI.new_ParticleBodyContact(), true);
  }

}
