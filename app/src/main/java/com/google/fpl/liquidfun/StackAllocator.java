/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.google.fpl.liquidfun;

public class StackAllocator {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected StackAllocator(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(StackAllocator obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(StackAllocator obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings({"deprecation", "removal"})
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        liquidfunJNI.delete_StackAllocator(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public StackAllocator() {
    this(liquidfunJNI.new_StackAllocator(), true);
  }

  public java.lang.Object allocate(int size) {
    return liquidfunJNI.StackAllocator_allocate(swigCPtr, this, size);
  }

  public java.lang.Object reallocate(java.lang.Object p, int size) {
    return liquidfunJNI.StackAllocator_reallocate(swigCPtr, this, p, size);
  }

  public void free(java.lang.Object p) {
    liquidfunJNI.StackAllocator_free(swigCPtr, this, p);
  }

  public int getMaxAllocation() {
    return liquidfunJNI.StackAllocator_getMaxAllocation(swigCPtr, this);
  }

  public final static int MIN_ALIGNMENT = liquidfunJNI.StackAllocator_MIN_ALIGNMENT_get();

  public final static int ALIGN_MASK = liquidfunJNI.StackAllocator_ALIGN_MASK_get();

}
