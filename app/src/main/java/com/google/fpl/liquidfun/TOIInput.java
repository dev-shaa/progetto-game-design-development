/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.google.fpl.liquidfun;

public class TOIInput {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected TOIInput(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(TOIInput obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(TOIInput obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings({"deprecation", "removal"})
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        liquidfunJNI.delete_TOIInput(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setProxyA(DistanceProxy value) {
    liquidfunJNI.TOIInput_proxyA_set(swigCPtr, this, DistanceProxy.getCPtr(value), value);
  }

  public DistanceProxy getProxyA() {
    return new DistanceProxy(liquidfunJNI.TOIInput_proxyA_get(swigCPtr, this), false);
  }

  public void setProxyB(DistanceProxy value) {
    liquidfunJNI.TOIInput_proxyB_set(swigCPtr, this, DistanceProxy.getCPtr(value), value);
  }

  public DistanceProxy getProxyB() {
    return new DistanceProxy(liquidfunJNI.TOIInput_proxyB_get(swigCPtr, this), false);
  }

  public void setSweepA(Sweep value) {
    liquidfunJNI.TOIInput_sweepA_set(swigCPtr, this, Sweep.getCPtr(value), value);
  }

  public Sweep getSweepA() {
    return new Sweep(liquidfunJNI.TOIInput_sweepA_get(swigCPtr, this), false);
  }

  public void setSweepB(Sweep value) {
    liquidfunJNI.TOIInput_sweepB_set(swigCPtr, this, Sweep.getCPtr(value), value);
  }

  public Sweep getSweepB() {
    return new Sweep(liquidfunJNI.TOIInput_sweepB_get(swigCPtr, this), false);
  }

  public void setTMax(float value) {
    liquidfunJNI.TOIInput_tMax_set(swigCPtr, this, value);
  }

  public float getTMax() {
    return liquidfunJNI.TOIInput_tMax_get(swigCPtr, this);
  }

  public TOIInput() {
    this(liquidfunJNI.new_TOIInput(), true);
  }

}
