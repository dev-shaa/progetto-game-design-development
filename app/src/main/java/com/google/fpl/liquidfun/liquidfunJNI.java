/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.google.fpl.liquidfun;

public class liquidfunJNI {
  public final static native int B2_ASSERT_ENABLED_get();
  public final static native float _pi_get();
  public final static native int LIQUIDFUN_EXTERNAL_LANGUAGE_API_get();
  public final static native int _maxManifoldPoints_get();
  public final static native int _maxPolygonVertices_get();
  public final static native float _aabbExtension_get();
  public final static native float _aabbMultiplier_get();
  public final static native float _linearSlop_get();
  public final static native float _angularSlop_get();
  public final static native float _polygonRadius_get();
  public final static native int _maxSubSteps_get();
  public final static native int _maxTOIContacts_get();
  public final static native float _velocityThreshold_get();
  public final static native float _maxLinearCorrection_get();
  public final static native float _maxAngularCorrection_get();
  public final static native float _maxTranslation_get();
  public final static native float _maxTranslationSquared_get();
  public final static native float _maxRotation_get();
  public final static native int _maxRotationSquared_get();
  public final static native float _baumgarte_get();
  public final static native float _toiBaugarte_get();
  public final static native int _invalidParticleIndex_get();
  public final static native int _maxParticleIndex_get();
  public final static native float _particleStride_get();
  public final static native float _minParticleWeight_get();
  public final static native float _maxParticlePressure_get();
  public final static native float _maxParticleForce_get();
  public final static native int _maxTriadDistance_get();
  public final static native int _maxTriadDistanceSquared_get();
  public final static native int _minParticleSystemBufferCapacity_get();
  public final static native float _barrierCollisionTime_get();
  public final static native float _timeToSleep_get();
  public final static native float _linearSleepTolerance_get();
  public final static native float _angularSleepTolerance_get();
  public final static native void Version_major_set(long jarg1, Version jarg1_, int jarg2);
  public final static native int Version_major_get(long jarg1, Version jarg1_);
  public final static native void Version_minor_set(long jarg1, Version jarg1_, int jarg2);
  public final static native int Version_minor_get(long jarg1, Version jarg1_);
  public final static native void Version_revision_set(long jarg1, Version jarg1_, int jarg2);
  public final static native int Version_revision_get(long jarg1, Version jarg1_);
  public final static native long new_Version();
  public final static native void delete_Version(long jarg1);
  public final static native void MassData_mass_set(long jarg1, MassData jarg1_, float jarg2);
  public final static native float MassData_mass_get(long jarg1, MassData jarg1_);
  public final static native void MassData_center_set(long jarg1, MassData jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long MassData_center_get(long jarg1, MassData jarg1_);
  public final static native void MassData_I_set(long jarg1, MassData jarg1_, float jarg2);
  public final static native float MassData_I_get(long jarg1, MassData jarg1_);
  public final static native void delete_MassData(long jarg1);
  public final static native void delete_Shape(long jarg1);
  public final static native int Shape_getChildCount(long jarg1, Shape jarg1_);
  public final static native boolean Shape_testPoint(long jarg1, Shape jarg1_, long jarg2, Transform jarg2_, long jarg3, Vec2 jarg3_);
  public final static native void Shape_computeMass(long jarg1, Shape jarg1_, long jarg2, MassData jarg2_, float jarg3);
  public final static native void Shape_type_set(long jarg1, Shape jarg1_, int jarg2);
  public final static native int Shape_type_get(long jarg1, Shape jarg1_);
  public final static native void Shape_radius_set(long jarg1, Shape jarg1_, float jarg2);
  public final static native float Shape_radius_get(long jarg1, Shape jarg1_);
  public final static native long new_CircleShape();
  public final static native void CircleShape_setPosition(long jarg1, CircleShape jarg1_, float jarg2, float jarg3);
  public final static native float CircleShape_getPositionX(long jarg1, CircleShape jarg1_);
  public final static native float CircleShape_getPositionY(long jarg1, CircleShape jarg1_);
  public final static native void delete_CircleShape(long jarg1);
  public final static native long new_EdgeShape();
  public final static native void EdgeShape_set(long jarg1, EdgeShape jarg1_, float jarg2, float jarg3, float jarg4, float jarg5);
  public final static native void delete_EdgeShape(long jarg1);
  public final static native long new_PolygonShape();
  public final static native void PolygonShape_setAsBox__SWIG_0(long jarg1, PolygonShape jarg1_, float jarg2, float jarg3);
  public final static native void PolygonShape_setCentroid(long jarg1, PolygonShape jarg1_, float jarg2, float jarg3);
  public final static native void PolygonShape_setAsBox__SWIG_1(long jarg1, PolygonShape jarg1_, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6);
  public final static native void delete_PolygonShape(long jarg1);
  public final static native long new_Vec2__SWIG_0();
  public final static native long new_Vec2__SWIG_1(float jarg1, float jarg2);
  public final static native void Vec2_set(long jarg1, Vec2 jarg1_, float jarg2, float jarg3);
  public final static native void Vec2_x_set(long jarg1, Vec2 jarg1_, float jarg2);
  public final static native float Vec2_x_get(long jarg1, Vec2 jarg1_);
  public final static native void Vec2_y_set(long jarg1, Vec2 jarg1_, float jarg2);
  public final static native float Vec2_y_get(long jarg1, Vec2 jarg1_);
  public final static native void delete_Vec2(long jarg1);
  public final static native long new_Transform();
  public final static native void Transform_setIdentity(long jarg1, Transform jarg1_);
  public final static native float Transform_getPositionX(long jarg1, Transform jarg1_);
  public final static native float Transform_getPositionY(long jarg1, Transform jarg1_);
  public final static native float Transform_getRotationSin(long jarg1, Transform jarg1_);
  public final static native float Transform_getRotationCos(long jarg1, Transform jarg1_);
  public final static native void delete_Transform(long jarg1);
  public final static native long new_BodyDef();
  public final static native void BodyDef_setPosition(long jarg1, BodyDef jarg1_, float jarg2, float jarg3);
  public final static native void BodyDef_type_set(long jarg1, BodyDef jarg1_, int jarg2);
  public final static native int BodyDef_type_get(long jarg1, BodyDef jarg1_);
  public final static native void BodyDef_position_set(long jarg1, BodyDef jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long BodyDef_position_get(long jarg1, BodyDef jarg1_);
  public final static native void BodyDef_angle_set(long jarg1, BodyDef jarg1_, float jarg2);
  public final static native float BodyDef_angle_get(long jarg1, BodyDef jarg1_);
  public final static native void BodyDef_linearVelocity_set(long jarg1, BodyDef jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long BodyDef_linearVelocity_get(long jarg1, BodyDef jarg1_);
  public final static native void BodyDef_angularVelocity_set(long jarg1, BodyDef jarg1_, float jarg2);
  public final static native float BodyDef_angularVelocity_get(long jarg1, BodyDef jarg1_);
  public final static native void BodyDef_linearDamping_set(long jarg1, BodyDef jarg1_, float jarg2);
  public final static native float BodyDef_linearDamping_get(long jarg1, BodyDef jarg1_);
  public final static native void BodyDef_angularDamping_set(long jarg1, BodyDef jarg1_, float jarg2);
  public final static native float BodyDef_angularDamping_get(long jarg1, BodyDef jarg1_);
  public final static native void BodyDef_allowSleep_set(long jarg1, BodyDef jarg1_, boolean jarg2);
  public final static native boolean BodyDef_allowSleep_get(long jarg1, BodyDef jarg1_);
  public final static native void BodyDef_awake_set(long jarg1, BodyDef jarg1_, boolean jarg2);
  public final static native boolean BodyDef_awake_get(long jarg1, BodyDef jarg1_);
  public final static native void BodyDef_fixedRotation_set(long jarg1, BodyDef jarg1_, boolean jarg2);
  public final static native boolean BodyDef_fixedRotation_get(long jarg1, BodyDef jarg1_);
  public final static native void BodyDef_bullet_set(long jarg1, BodyDef jarg1_, boolean jarg2);
  public final static native boolean BodyDef_bullet_get(long jarg1, BodyDef jarg1_);
  public final static native void BodyDef_active_set(long jarg1, BodyDef jarg1_, boolean jarg2);
  public final static native boolean BodyDef_active_get(long jarg1, BodyDef jarg1_);
  public final static native void BodyDef_userData_set(long jarg1, BodyDef jarg1_, java.lang.Object jarg2);
  public final static native java.lang.Object BodyDef_userData_get(long jarg1, BodyDef jarg1_);
  public final static native void BodyDef_gravityScale_set(long jarg1, BodyDef jarg1_, float jarg2);
  public final static native float BodyDef_gravityScale_get(long jarg1, BodyDef jarg1_);
  public final static native void delete_BodyDef(long jarg1);
  public final static native long Body_createFixture__SWIG_0(long jarg1, Body jarg1_, long jarg2, FixtureDef jarg2_);
  public final static native long Body_createFixture__SWIG_1(long jarg1, Body jarg1_, long jarg2, Shape jarg2_, float jarg3);
  public final static native void Body_destroyFixture(long jarg1, Body jarg1_, long jarg2, Fixture jarg2_);
  public final static native void Body_setTransform__SWIG_0(long jarg1, Body jarg1_, long jarg2, Vec2 jarg2_, float jarg3);
  public final static native long Body_getTransform(long jarg1, Body jarg1_);
  public final static native long Body_getPosition(long jarg1, Body jarg1_);
  public final static native float Body_getAngle(long jarg1, Body jarg1_);
  public final static native long Body_getWorldCenter(long jarg1, Body jarg1_);
  public final static native long Body_getLocalCenter(long jarg1, Body jarg1_);
  public final static native void Body_setLinearVelocity(long jarg1, Body jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long Body_getLinearVelocity(long jarg1, Body jarg1_);
  public final static native void Body_setAngularVelocity(long jarg1, Body jarg1_, float jarg2);
  public final static native float Body_getAngularVelocity(long jarg1, Body jarg1_);
  public final static native void Body_applyForce(long jarg1, Body jarg1_, long jarg2, Vec2 jarg2_, long jarg3, Vec2 jarg3_, boolean jarg4);
  public final static native void Body_applyForceToCenter(long jarg1, Body jarg1_, long jarg2, Vec2 jarg2_, boolean jarg3);
  public final static native void Body_applyTorque(long jarg1, Body jarg1_, float jarg2, boolean jarg3);
  public final static native void Body_applyLinearImpulse(long jarg1, Body jarg1_, long jarg2, Vec2 jarg2_, long jarg3, Vec2 jarg3_, boolean jarg4);
  public final static native void Body_applyAngularImpulse(long jarg1, Body jarg1_, float jarg2, boolean jarg3);
  public final static native float Body_getMass(long jarg1, Body jarg1_);
  public final static native float Body_getInertia(long jarg1, Body jarg1_);
  public final static native void Body_getMassData(long jarg1, Body jarg1_, long jarg2, MassData jarg2_);
  public final static native void Body_setMassData(long jarg1, Body jarg1_, long jarg2, MassData jarg2_);
  public final static native void Body_resetMassData(long jarg1, Body jarg1_);
  public final static native long Body_getWorldPoint(long jarg1, Body jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long Body_getWorldVector(long jarg1, Body jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long Body_getLocalPoint(long jarg1, Body jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long Body_getLocalVector(long jarg1, Body jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long Body_getLinearVelocityFromWorldPoint(long jarg1, Body jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long Body_getLinearVelocityFromLocalPoint(long jarg1, Body jarg1_, long jarg2, Vec2 jarg2_);
  public final static native float Body_getLinearDamping(long jarg1, Body jarg1_);
  public final static native void Body_setLinearDamping(long jarg1, Body jarg1_, float jarg2);
  public final static native float Body_getAngularDamping(long jarg1, Body jarg1_);
  public final static native void Body_setAngularDamping(long jarg1, Body jarg1_, float jarg2);
  public final static native float Body_getGravityScale(long jarg1, Body jarg1_);
  public final static native void Body_setGravityScale(long jarg1, Body jarg1_, float jarg2);
  public final static native void Body_setType(long jarg1, Body jarg1_, int jarg2);
  public final static native int Body_getType(long jarg1, Body jarg1_);
  public final static native void Body_setBullet(long jarg1, Body jarg1_, boolean jarg2);
  public final static native boolean Body_isBullet(long jarg1, Body jarg1_);
  public final static native void Body_setSleepingAllowed(long jarg1, Body jarg1_, boolean jarg2);
  public final static native boolean Body_isSleepingAllowed(long jarg1, Body jarg1_);
  public final static native void Body_setAwake(long jarg1, Body jarg1_, boolean jarg2);
  public final static native boolean Body_isAwake(long jarg1, Body jarg1_);
  public final static native void Body_setActive(long jarg1, Body jarg1_, boolean jarg2);
  public final static native boolean Body_isActive(long jarg1, Body jarg1_);
  public final static native void Body_setFixedRotation(long jarg1, Body jarg1_, boolean jarg2);
  public final static native boolean Body_isFixedRotation(long jarg1, Body jarg1_);
  public final static native long Body_getFixtureList__SWIG_0(long jarg1, Body jarg1_);
  public final static native long Body_getJointList__SWIG_0(long jarg1, Body jarg1_);
  public final static native long Body_getContactList__SWIG_0(long jarg1, Body jarg1_);
  public final static native long Body_getNext__SWIG_0(long jarg1, Body jarg1_);
  public final static native java.lang.Object Body_getUserData(long jarg1, Body jarg1_);
  public final static native void Body_setUserData(long jarg1, Body jarg1_, java.lang.Object jarg2);
  public final static native long Body_getWorld__SWIG_0(long jarg1, Body jarg1_);
  public final static native void Body_dump(long jarg1, Body jarg1_);
  public final static native float Body_getPositionX(long jarg1, Body jarg1_);
  public final static native float Body_getPositionY(long jarg1, Body jarg1_);
  public final static native void Body_setTransform__SWIG_1(long jarg1, Body jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native long new_Filter();
  public final static native void Filter_categoryBits_set(long jarg1, Filter jarg1_, int jarg2);
  public final static native int Filter_categoryBits_get(long jarg1, Filter jarg1_);
  public final static native void Filter_maskBits_set(long jarg1, Filter jarg1_, int jarg2);
  public final static native int Filter_maskBits_get(long jarg1, Filter jarg1_);
  public final static native void Filter_groupIndex_set(long jarg1, Filter jarg1_, short jarg2);
  public final static native short Filter_groupIndex_get(long jarg1, Filter jarg1_);
  public final static native void delete_Filter(long jarg1);
  public final static native long new_FixtureDef();
  public final static native void FixtureDef_shape_set(long jarg1, FixtureDef jarg1_, long jarg2, Shape jarg2_);
  public final static native long FixtureDef_shape_get(long jarg1, FixtureDef jarg1_);
  public final static native void FixtureDef_userData_set(long jarg1, FixtureDef jarg1_, java.lang.Object jarg2);
  public final static native java.lang.Object FixtureDef_userData_get(long jarg1, FixtureDef jarg1_);
  public final static native void FixtureDef_friction_set(long jarg1, FixtureDef jarg1_, float jarg2);
  public final static native float FixtureDef_friction_get(long jarg1, FixtureDef jarg1_);
  public final static native void FixtureDef_restitution_set(long jarg1, FixtureDef jarg1_, float jarg2);
  public final static native float FixtureDef_restitution_get(long jarg1, FixtureDef jarg1_);
  public final static native void FixtureDef_density_set(long jarg1, FixtureDef jarg1_, float jarg2);
  public final static native float FixtureDef_density_get(long jarg1, FixtureDef jarg1_);
  public final static native void FixtureDef_isSensor_set(long jarg1, FixtureDef jarg1_, boolean jarg2);
  public final static native boolean FixtureDef_isSensor_get(long jarg1, FixtureDef jarg1_);
  public final static native void FixtureDef_filter_set(long jarg1, FixtureDef jarg1_, long jarg2, Filter jarg2_);
  public final static native long FixtureDef_filter_get(long jarg1, FixtureDef jarg1_);
  public final static native void delete_FixtureDef(long jarg1);
  public final static native void FixtureProxy_aabb_set(long jarg1, FixtureProxy jarg1_, long jarg2);
  public final static native long FixtureProxy_aabb_get(long jarg1, FixtureProxy jarg1_);
  public final static native void FixtureProxy_fixture_set(long jarg1, FixtureProxy jarg1_, long jarg2, Fixture jarg2_);
  public final static native long FixtureProxy_fixture_get(long jarg1, FixtureProxy jarg1_);
  public final static native void FixtureProxy_childIndex_set(long jarg1, FixtureProxy jarg1_, int jarg2);
  public final static native int FixtureProxy_childIndex_get(long jarg1, FixtureProxy jarg1_);
  public final static native void FixtureProxy_proxyId_set(long jarg1, FixtureProxy jarg1_, int jarg2);
  public final static native int FixtureProxy_proxyId_get(long jarg1, FixtureProxy jarg1_);
  public final static native long new_FixtureProxy();
  public final static native void delete_FixtureProxy(long jarg1);
  public final static native int Fixture_getType(long jarg1, Fixture jarg1_);
  public final static native long Fixture_getShape__SWIG_0(long jarg1, Fixture jarg1_);
  public final static native void Fixture_setSensor(long jarg1, Fixture jarg1_, boolean jarg2);
  public final static native boolean Fixture_isSensor(long jarg1, Fixture jarg1_);
  public final static native void Fixture_setFilterData(long jarg1, Fixture jarg1_, long jarg2, Filter jarg2_);
  public final static native long Fixture_getFilterData(long jarg1, Fixture jarg1_);
  public final static native void Fixture_refilter(long jarg1, Fixture jarg1_);
  public final static native long Fixture_getBody__SWIG_0(long jarg1, Fixture jarg1_);
  public final static native long Fixture_getNext__SWIG_0(long jarg1, Fixture jarg1_);
  public final static native java.lang.Object Fixture_getUserData(long jarg1, Fixture jarg1_);
  public final static native void Fixture_setUserData(long jarg1, Fixture jarg1_, java.lang.Object jarg2);
  public final static native boolean Fixture_testPoint(long jarg1, Fixture jarg1_, long jarg2, Vec2 jarg2_);
  public final static native void Fixture_computeDistance(long jarg1, Fixture jarg1_, long jarg2, Vec2 jarg2_, long jarg3, long jarg4, Vec2 jarg4_, int jarg5);
  public final static native boolean Fixture_rayCast(long jarg1, Fixture jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native void Fixture_getMassData(long jarg1, Fixture jarg1_, long jarg2, MassData jarg2_);
  public final static native void Fixture_setDensity(long jarg1, Fixture jarg1_, float jarg2);
  public final static native float Fixture_getDensity(long jarg1, Fixture jarg1_);
  public final static native float Fixture_getFriction(long jarg1, Fixture jarg1_);
  public final static native void Fixture_setFriction(long jarg1, Fixture jarg1_, float jarg2);
  public final static native float Fixture_getRestitution(long jarg1, Fixture jarg1_);
  public final static native void Fixture_setRestitution(long jarg1, Fixture jarg1_, float jarg2);
  public final static native long Fixture_getAABB(long jarg1, Fixture jarg1_, int jarg2);
  public final static native void Fixture_dump(long jarg1, Fixture jarg1_, int jarg2);
  public final static native void delete_Fixture(long jarg1);
  public final static native long new_World__SWIG_0(long jarg1, Vec2 jarg1_);
  public final static native void delete_World(long jarg1);
  public final static native void World_setDestructionListener(long jarg1, World jarg1_, long jarg2);
  public final static native void World_setContactFilter(long jarg1, World jarg1_, long jarg2);
  public final static native void World_setContactListener(long jarg1, World jarg1_, long jarg2, ContactListener jarg2_);
  public final static native void World_setDebugDraw(long jarg1, World jarg1_, long jarg2);
  public final static native long World_createBody(long jarg1, World jarg1_, long jarg2, BodyDef jarg2_);
  public final static native void World_destroyBody(long jarg1, World jarg1_, long jarg2, Body jarg2_);
  public final static native long World_createJoint(long jarg1, World jarg1_, long jarg2, JointDef jarg2_);
  public final static native long World_createMouseJoint(long jarg1, World jarg1_, long jarg2, MouseJointDef jarg2_);
  public final static native long World_createDistanceJoint(long jarg1, World jarg1_, long jarg2, DistanceJointDef jarg2_);
  public final static native long World_createRopeJoint(long jarg1, World jarg1_, long jarg2, RopeJointDef jarg2_);
  public final static native void World_destroyJoint(long jarg1, World jarg1_, long jarg2, Joint jarg2_);
  public final static native long World_createParticleSystem(long jarg1, World jarg1_, long jarg2, ParticleSystemDef jarg2_);
  public final static native void World_destroyParticleSystem(long jarg1, World jarg1_, long jarg2, ParticleSystem jarg2_);
  public final static native void World_step__SWIG_0(long jarg1, World jarg1_, float jarg2, int jarg3, int jarg4, int jarg5);
  public final static native void World_step__SWIG_1(long jarg1, World jarg1_, float jarg2, int jarg3, int jarg4);
  public final static native int World_calculateReasonableParticleIterations(long jarg1, World jarg1_, float jarg2);
  public final static native void World_clearForces(long jarg1, World jarg1_);
  public final static native void World_drawDebugData(long jarg1, World jarg1_);
  public final static native void World_queryAABB(long jarg1, World jarg1_, long jarg2, QueryCallback jarg2_, long jarg3);
  public final static native void World_queryShapeAABB(long jarg1, World jarg1_, long jarg2, QueryCallback jarg2_, long jarg3, Shape jarg3_, long jarg4, Transform jarg4_);
  public final static native void World_rayCast(long jarg1, World jarg1_, long jarg2, RayCastCallback jarg2_, long jarg3, Vec2 jarg3_, long jarg4, Vec2 jarg4_);
  public final static native long World_getBodyList__SWIG_0(long jarg1, World jarg1_);
  public final static native long World_getJointList__SWIG_0(long jarg1, World jarg1_);
  public final static native long World_getParticleSystemList__SWIG_0(long jarg1, World jarg1_);
  public final static native long World_getContactList__SWIG_0(long jarg1, World jarg1_);
  public final static native void World_setAllowSleeping(long jarg1, World jarg1_, boolean jarg2);
  public final static native boolean World_getAllowSleeping(long jarg1, World jarg1_);
  public final static native void World_setWarmStarting(long jarg1, World jarg1_, boolean jarg2);
  public final static native boolean World_getWarmStarting(long jarg1, World jarg1_);
  public final static native void World_setContinuousPhysics(long jarg1, World jarg1_, boolean jarg2);
  public final static native boolean World_getContinuousPhysics(long jarg1, World jarg1_);
  public final static native void World_setSubStepping(long jarg1, World jarg1_, boolean jarg2);
  public final static native boolean World_getSubStepping(long jarg1, World jarg1_);
  public final static native int World_getProxyCount(long jarg1, World jarg1_);
  public final static native int World_getBodyCount(long jarg1, World jarg1_);
  public final static native int World_getJointCount(long jarg1, World jarg1_);
  public final static native int World_getContactCount(long jarg1, World jarg1_);
  public final static native int World_getTreeHeight(long jarg1, World jarg1_);
  public final static native int World_getTreeBalance(long jarg1, World jarg1_);
  public final static native float World_getTreeQuality(long jarg1, World jarg1_);
  public final static native void World_setGravity__SWIG_0(long jarg1, World jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long World_getGravity(long jarg1, World jarg1_);
  public final static native boolean World_isLocked(long jarg1, World jarg1_);
  public final static native void World_setAutoClearForces(long jarg1, World jarg1_, boolean jarg2);
  public final static native boolean World_getAutoClearForces(long jarg1, World jarg1_);
  public final static native void World_shiftOrigin(long jarg1, World jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long World_getContactManager(long jarg1, World jarg1_);
  public final static native long World_getProfile(long jarg1, World jarg1_);
  public final static native void World_dump(long jarg1, World jarg1_);
  public final static native long World_getVersion(long jarg1, World jarg1_);
  public final static native String World_getVersionString(long jarg1, World jarg1_);
  public final static native long new_World__SWIG_1(float jarg1, float jarg2);
  public final static native void World_setGravity__SWIG_1(long jarg1, World jarg1_, float jarg2, float jarg3);
  public final static native long new_QueryCallback();
  public final static native void delete_QueryCallback(long jarg1);
  public final static native boolean QueryCallback_reportFixture(long jarg1, QueryCallback jarg1_, long jarg2, Fixture jarg2_);
  public final static native boolean QueryCallback_reportParticle(long jarg1, QueryCallback jarg1_, long jarg2, ParticleSystem jarg2_, int jarg3);
  public final static native boolean QueryCallback_reportParticleSwigExplicitQueryCallback(long jarg1, QueryCallback jarg1_, long jarg2, ParticleSystem jarg2_, int jarg3);
  public final static native void QueryCallback_director_connect(QueryCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void QueryCallback_change_ownership(QueryCallback obj, long cptr, boolean take_or_release);
  public final static native long new_RayCastCallback();
  public final static native void delete_RayCastCallback(long jarg1);
  public final static native float RayCastCallback_reportFixture(long jarg1, RayCastCallback jarg1_, long jarg2, Fixture jarg2_, long jarg3, Vec2 jarg3_, long jarg4, Vec2 jarg4_, float jarg5);
  public final static native float RayCastCallback_reportParticle(long jarg1, RayCastCallback jarg1_, long jarg2, ParticleSystem jarg2_, int jarg3, long jarg4, Vec2 jarg4_, long jarg5, Vec2 jarg5_, float jarg6);
  public final static native float RayCastCallback_reportParticleSwigExplicitRayCastCallback(long jarg1, RayCastCallback jarg1_, long jarg2, ParticleSystem jarg2_, int jarg3, long jarg4, Vec2 jarg4_, long jarg5, Vec2 jarg5_, float jarg6);
  public final static native void RayCastCallback_director_connect(RayCastCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void RayCastCallback_change_ownership(RayCastCallback obj, long cptr, boolean take_or_release);
  public final static native long new_ContactListener();
  public final static native void delete_ContactListener(long jarg1);
  public final static native void ContactListener_beginContact(long jarg1, ContactListener jarg1_, long jarg2, Contact jarg2_);
  public final static native void ContactListener_beginContactSwigExplicitContactListener(long jarg1, ContactListener jarg1_, long jarg2, Contact jarg2_);
  public final static native void ContactListener_endContact(long jarg1, ContactListener jarg1_, long jarg2, Contact jarg2_);
  public final static native void ContactListener_endContactSwigExplicitContactListener(long jarg1, ContactListener jarg1_, long jarg2, Contact jarg2_);
  public final static native void ContactListener_director_connect(ContactListener obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ContactListener_change_ownership(ContactListener obj, long cptr, boolean take_or_release);
  public final static native long new_ParticleColor__SWIG_0();
  public final static native long new_ParticleColor__SWIG_1(short jarg1, short jarg2, short jarg3, short jarg4);
  public final static native long new_ParticleColor__SWIG_2(long jarg1);
  public final static native boolean ParticleColor_isZero(long jarg1, ParticleColor jarg1_);
  public final static native void ParticleColor_set__SWIG_0(long jarg1, ParticleColor jarg1_, short jarg2, short jarg3, short jarg4, short jarg5);
  public final static native void ParticleColor_set__SWIG_1(long jarg1, ParticleColor jarg1_, long jarg2);
  public final static native boolean ParticleColor_equals(long jarg1, ParticleColor jarg1_, long jarg2, ParticleColor jarg2_);
  public final static native void ParticleColor_mix(long jarg1, ParticleColor jarg1_, long jarg2, ParticleColor jarg2_, int jarg3);
  public final static native void ParticleColor_mixColors(long jarg1, ParticleColor jarg1_, long jarg2, ParticleColor jarg2_, int jarg3);
  public final static native void ParticleColor_r_set(long jarg1, ParticleColor jarg1_, short jarg2);
  public final static native short ParticleColor_r_get(long jarg1, ParticleColor jarg1_);
  public final static native void ParticleColor_g_set(long jarg1, ParticleColor jarg1_, short jarg2);
  public final static native short ParticleColor_g_get(long jarg1, ParticleColor jarg1_);
  public final static native void ParticleColor_b_set(long jarg1, ParticleColor jarg1_, short jarg2);
  public final static native short ParticleColor_b_get(long jarg1, ParticleColor jarg1_);
  public final static native void ParticleColor_a_set(long jarg1, ParticleColor jarg1_, short jarg2);
  public final static native short ParticleColor_a_get(long jarg1, ParticleColor jarg1_);
  public final static native void delete_ParticleColor(long jarg1);
  public final static native void b2ParticleColor_zero_set(long jarg1, ParticleColor jarg1_);
  public final static native long b2ParticleColor_zero_get();
  public final static native long new_ParticleDef();
  public final static native void ParticleDef_setPosition(long jarg1, ParticleDef jarg1_, float jarg2, float jarg3);
  public final static native void ParticleDef_setColor(long jarg1, ParticleDef jarg1_, int jarg2, int jarg3, int jarg4, int jarg5);
  public final static native void ParticleDef_flags_set(long jarg1, ParticleDef jarg1_, long jarg2);
  public final static native long ParticleDef_flags_get(long jarg1, ParticleDef jarg1_);
  public final static native void ParticleDef_position_set(long jarg1, ParticleDef jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long ParticleDef_position_get(long jarg1, ParticleDef jarg1_);
  public final static native void ParticleDef_velocity_set(long jarg1, ParticleDef jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long ParticleDef_velocity_get(long jarg1, ParticleDef jarg1_);
  public final static native void ParticleDef_color_set(long jarg1, ParticleDef jarg1_, long jarg2, ParticleColor jarg2_);
  public final static native long ParticleDef_color_get(long jarg1, ParticleDef jarg1_);
  public final static native void ParticleDef_lifetime_set(long jarg1, ParticleDef jarg1_, float jarg2);
  public final static native float ParticleDef_lifetime_get(long jarg1, ParticleDef jarg1_);
  public final static native void ParticleDef_group_set(long jarg1, ParticleDef jarg1_, long jarg2, ParticleGroup jarg2_);
  public final static native long ParticleDef_group_get(long jarg1, ParticleDef jarg1_);
  public final static native void delete_ParticleDef(long jarg1);
  public final static native int b2CalculateParticleIterations(float jarg1, float jarg2, float jarg3);
  public final static native long ParticleGroup_getNext(long jarg1, ParticleGroup jarg1_);
  public final static native int ParticleGroup_getParticleCount(long jarg1, ParticleGroup jarg1_);
  public final static native int ParticleGroup_getBufferIndex(long jarg1, ParticleGroup jarg1_);
  public final static native int ParticleGroup_getGroupFlags(long jarg1, ParticleGroup jarg1_);
  public final static native long new_ParticleGroupDef();
  public final static native void delete_ParticleGroupDef(long jarg1);
  public final static native void ParticleGroupDef_flags_set(long jarg1, ParticleGroupDef jarg1_, long jarg2);
  public final static native long ParticleGroupDef_flags_get(long jarg1, ParticleGroupDef jarg1_);
  public final static native void ParticleGroupDef_groupFlags_set(long jarg1, ParticleGroupDef jarg1_, long jarg2);
  public final static native long ParticleGroupDef_groupFlags_get(long jarg1, ParticleGroupDef jarg1_);
  public final static native void ParticleGroupDef_position_set(long jarg1, ParticleGroupDef jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long ParticleGroupDef_position_get(long jarg1, ParticleGroupDef jarg1_);
  public final static native void ParticleGroupDef_angle_set(long jarg1, ParticleGroupDef jarg1_, float jarg2);
  public final static native float ParticleGroupDef_angle_get(long jarg1, ParticleGroupDef jarg1_);
  public final static native void ParticleGroupDef_linearVelocity_set(long jarg1, ParticleGroupDef jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long ParticleGroupDef_linearVelocity_get(long jarg1, ParticleGroupDef jarg1_);
  public final static native void ParticleGroupDef_angularVelocity_set(long jarg1, ParticleGroupDef jarg1_, float jarg2);
  public final static native float ParticleGroupDef_angularVelocity_get(long jarg1, ParticleGroupDef jarg1_);
  public final static native void ParticleGroupDef_color_set(long jarg1, ParticleGroupDef jarg1_, long jarg2, ParticleColor jarg2_);
  public final static native long ParticleGroupDef_color_get(long jarg1, ParticleGroupDef jarg1_);
  public final static native void ParticleGroupDef_strength_set(long jarg1, ParticleGroupDef jarg1_, float jarg2);
  public final static native float ParticleGroupDef_strength_get(long jarg1, ParticleGroupDef jarg1_);
  public final static native void ParticleGroupDef_shape_set(long jarg1, ParticleGroupDef jarg1_, long jarg2, Shape jarg2_);
  public final static native long ParticleGroupDef_shape_get(long jarg1, ParticleGroupDef jarg1_);
  public final static native void ParticleGroupDef_shapeCount_set(long jarg1, ParticleGroupDef jarg1_, int jarg2);
  public final static native int ParticleGroupDef_shapeCount_get(long jarg1, ParticleGroupDef jarg1_);
  public final static native void ParticleGroupDef_stride_set(long jarg1, ParticleGroupDef jarg1_, float jarg2);
  public final static native float ParticleGroupDef_stride_get(long jarg1, ParticleGroupDef jarg1_);
  public final static native void ParticleGroupDef_particleCount_set(long jarg1, ParticleGroupDef jarg1_, int jarg2);
  public final static native int ParticleGroupDef_particleCount_get(long jarg1, ParticleGroupDef jarg1_);
  public final static native void ParticleGroupDef_positionData_set(long jarg1, ParticleGroupDef jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long ParticleGroupDef_positionData_get(long jarg1, ParticleGroupDef jarg1_);
  public final static native void ParticleGroupDef_lifetime_set(long jarg1, ParticleGroupDef jarg1_, float jarg2);
  public final static native float ParticleGroupDef_lifetime_get(long jarg1, ParticleGroupDef jarg1_);
  public final static native void ParticleGroupDef_group_set(long jarg1, ParticleGroupDef jarg1_, long jarg2, ParticleGroup jarg2_);
  public final static native long ParticleGroupDef_group_get(long jarg1, ParticleGroupDef jarg1_);
  public final static native void ParticleGroupDef_circleShapes_set(long jarg1, ParticleGroupDef jarg1_, long jarg2, CircleShape jarg2_);
  public final static native long ParticleGroupDef_circleShapes_get(long jarg1, ParticleGroupDef jarg1_);
  public final static native void ParticleGroupDef_ownShapesArray_set(long jarg1, ParticleGroupDef jarg1_, boolean jarg2);
  public final static native boolean ParticleGroupDef_ownShapesArray_get(long jarg1, ParticleGroupDef jarg1_);
  public final static native void ParticleGroupDef_freeShapesMemory(long jarg1, ParticleGroupDef jarg1_);
  public final static native void ParticleGroupDef_setCircleShapesFromVertexList(long jarg1, ParticleGroupDef jarg1_, java.nio.ByteBuffer jarg2, int jarg3, float jarg4);
  public final static native void ParticleGroupDef_setPosition(long jarg1, ParticleGroupDef jarg1_, float jarg2, float jarg3);
  public final static native void ParticleGroupDef_setColor(long jarg1, ParticleGroupDef jarg1_, int jarg2, int jarg3, int jarg4, int jarg5);
  public final static native int ParticleSystem_createParticle(long jarg1, ParticleSystem jarg1_, long jarg2, ParticleDef jarg2_);
  public final static native void ParticleSystem_joinParticleGroups(long jarg1, ParticleSystem jarg1_, long jarg2, ParticleGroup jarg2_, long jarg3, ParticleGroup jarg3_);
  public final static native long ParticleSystem_getParticleGroupList(long jarg1, ParticleSystem jarg1_);
  public final static native void ParticleSystem_destroyParticlesInShape(long jarg1, ParticleSystem jarg1_, long jarg2, Shape jarg2_, long jarg3, Transform jarg3_);
  public final static native long ParticleSystem_createParticleGroup(long jarg1, ParticleSystem jarg1_, long jarg2, ParticleGroupDef jarg2_);
  public final static native int ParticleSystem_getParticleGroupCount(long jarg1, ParticleSystem jarg1_);
  public final static native int ParticleSystem_getParticleCount(long jarg1, ParticleSystem jarg1_);
  public final static native void ParticleSystem_setMaxParticleCount(long jarg1, ParticleSystem jarg1_, int jarg2);
  public final static native void ParticleSystem_setDamping(long jarg1, ParticleSystem jarg1_, float jarg2);
  public final static native void ParticleSystem_setRadius(long jarg1, ParticleSystem jarg1_, float jarg2);
  public final static native void ParticleSystem_queryShapeAABB(long jarg1, ParticleSystem jarg1_, long jarg2, QueryCallback jarg2_, long jarg3, Shape jarg3_, long jarg4, Transform jarg4_);
  public final static native void ParticleSystem_setParticleVelocity(long jarg1, ParticleSystem jarg1_, int jarg2, float jarg3, float jarg4);
  public final static native float ParticleSystem_getParticlePositionX(long jarg1, ParticleSystem jarg1_, int jarg2);
  public final static native float ParticleSystem_getParticlePositionY(long jarg1, ParticleSystem jarg1_, int jarg2);
  public final static native int ParticleSystem_copyPositionBuffer(long jarg1, ParticleSystem jarg1_, int jarg2, int jarg3, java.nio.ByteBuffer jarg4);
  public final static native int ParticleSystem_copyColorBuffer(long jarg1, ParticleSystem jarg1_, int jarg2, int jarg3, java.nio.ByteBuffer jarg4);
  public final static native int ParticleSystem_copyWeightBuffer(long jarg1, ParticleSystem jarg1_, int jarg2, int jarg3, java.nio.ByteBuffer jarg4);
  public final static native void ParticlePair_indexA_set(long jarg1, ParticlePair jarg1_, int jarg2);
  public final static native int ParticlePair_indexA_get(long jarg1, ParticlePair jarg1_);
  public final static native void ParticlePair_indexB_set(long jarg1, ParticlePair jarg1_, int jarg2);
  public final static native int ParticlePair_indexB_get(long jarg1, ParticlePair jarg1_);
  public final static native void ParticlePair_flags_set(long jarg1, ParticlePair jarg1_, long jarg2);
  public final static native long ParticlePair_flags_get(long jarg1, ParticlePair jarg1_);
  public final static native void ParticlePair_strength_set(long jarg1, ParticlePair jarg1_, float jarg2);
  public final static native float ParticlePair_strength_get(long jarg1, ParticlePair jarg1_);
  public final static native void ParticlePair_distance_set(long jarg1, ParticlePair jarg1_, float jarg2);
  public final static native float ParticlePair_distance_get(long jarg1, ParticlePair jarg1_);
  public final static native long new_ParticlePair();
  public final static native void delete_ParticlePair(long jarg1);
  public final static native void ParticleTriad_indexA_set(long jarg1, ParticleTriad jarg1_, int jarg2);
  public final static native int ParticleTriad_indexA_get(long jarg1, ParticleTriad jarg1_);
  public final static native void ParticleTriad_indexB_set(long jarg1, ParticleTriad jarg1_, int jarg2);
  public final static native int ParticleTriad_indexB_get(long jarg1, ParticleTriad jarg1_);
  public final static native void ParticleTriad_indexC_set(long jarg1, ParticleTriad jarg1_, int jarg2);
  public final static native int ParticleTriad_indexC_get(long jarg1, ParticleTriad jarg1_);
  public final static native void ParticleTriad_flags_set(long jarg1, ParticleTriad jarg1_, long jarg2);
  public final static native long ParticleTriad_flags_get(long jarg1, ParticleTriad jarg1_);
  public final static native void ParticleTriad_strength_set(long jarg1, ParticleTriad jarg1_, float jarg2);
  public final static native float ParticleTriad_strength_get(long jarg1, ParticleTriad jarg1_);
  public final static native void ParticleTriad_pa_set(long jarg1, ParticleTriad jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long ParticleTriad_pa_get(long jarg1, ParticleTriad jarg1_);
  public final static native void ParticleTriad_pb_set(long jarg1, ParticleTriad jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long ParticleTriad_pb_get(long jarg1, ParticleTriad jarg1_);
  public final static native void ParticleTriad_pc_set(long jarg1, ParticleTriad jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long ParticleTriad_pc_get(long jarg1, ParticleTriad jarg1_);
  public final static native void ParticleTriad_ka_set(long jarg1, ParticleTriad jarg1_, float jarg2);
  public final static native float ParticleTriad_ka_get(long jarg1, ParticleTriad jarg1_);
  public final static native void ParticleTriad_kb_set(long jarg1, ParticleTriad jarg1_, float jarg2);
  public final static native float ParticleTriad_kb_get(long jarg1, ParticleTriad jarg1_);
  public final static native void ParticleTriad_kc_set(long jarg1, ParticleTriad jarg1_, float jarg2);
  public final static native float ParticleTriad_kc_get(long jarg1, ParticleTriad jarg1_);
  public final static native void ParticleTriad_s_set(long jarg1, ParticleTriad jarg1_, float jarg2);
  public final static native float ParticleTriad_s_get(long jarg1, ParticleTriad jarg1_);
  public final static native long new_ParticleTriad();
  public final static native void delete_ParticleTriad(long jarg1);
  public final static native long new_ParticleSystemDef();
  public final static native void ParticleSystemDef_strictContactCheck_set(long jarg1, ParticleSystemDef jarg1_, boolean jarg2);
  public final static native boolean ParticleSystemDef_strictContactCheck_get(long jarg1, ParticleSystemDef jarg1_);
  public final static native void ParticleSystemDef_density_set(long jarg1, ParticleSystemDef jarg1_, float jarg2);
  public final static native float ParticleSystemDef_density_get(long jarg1, ParticleSystemDef jarg1_);
  public final static native void ParticleSystemDef_gravityScale_set(long jarg1, ParticleSystemDef jarg1_, float jarg2);
  public final static native float ParticleSystemDef_gravityScale_get(long jarg1, ParticleSystemDef jarg1_);
  public final static native void ParticleSystemDef_radius_set(long jarg1, ParticleSystemDef jarg1_, float jarg2);
  public final static native float ParticleSystemDef_radius_get(long jarg1, ParticleSystemDef jarg1_);
  public final static native void ParticleSystemDef_maxCount_set(long jarg1, ParticleSystemDef jarg1_, int jarg2);
  public final static native int ParticleSystemDef_maxCount_get(long jarg1, ParticleSystemDef jarg1_);
  public final static native void ParticleSystemDef_pressureStrength_set(long jarg1, ParticleSystemDef jarg1_, float jarg2);
  public final static native float ParticleSystemDef_pressureStrength_get(long jarg1, ParticleSystemDef jarg1_);
  public final static native void ParticleSystemDef_dampingStrength_set(long jarg1, ParticleSystemDef jarg1_, float jarg2);
  public final static native float ParticleSystemDef_dampingStrength_get(long jarg1, ParticleSystemDef jarg1_);
  public final static native void ParticleSystemDef_elasticStrength_set(long jarg1, ParticleSystemDef jarg1_, float jarg2);
  public final static native float ParticleSystemDef_elasticStrength_get(long jarg1, ParticleSystemDef jarg1_);
  public final static native void ParticleSystemDef_springStrength_set(long jarg1, ParticleSystemDef jarg1_, float jarg2);
  public final static native float ParticleSystemDef_springStrength_get(long jarg1, ParticleSystemDef jarg1_);
  public final static native void ParticleSystemDef_viscousStrength_set(long jarg1, ParticleSystemDef jarg1_, float jarg2);
  public final static native float ParticleSystemDef_viscousStrength_get(long jarg1, ParticleSystemDef jarg1_);
  public final static native void ParticleSystemDef_surfaceTensionPressureStrength_set(long jarg1, ParticleSystemDef jarg1_, float jarg2);
  public final static native float ParticleSystemDef_surfaceTensionPressureStrength_get(long jarg1, ParticleSystemDef jarg1_);
  public final static native void ParticleSystemDef_surfaceTensionNormalStrength_set(long jarg1, ParticleSystemDef jarg1_, float jarg2);
  public final static native float ParticleSystemDef_surfaceTensionNormalStrength_get(long jarg1, ParticleSystemDef jarg1_);
  public final static native void ParticleSystemDef_repulsiveStrength_set(long jarg1, ParticleSystemDef jarg1_, float jarg2);
  public final static native float ParticleSystemDef_repulsiveStrength_get(long jarg1, ParticleSystemDef jarg1_);
  public final static native void ParticleSystemDef_powderStrength_set(long jarg1, ParticleSystemDef jarg1_, float jarg2);
  public final static native float ParticleSystemDef_powderStrength_get(long jarg1, ParticleSystemDef jarg1_);
  public final static native void ParticleSystemDef_ejectionStrength_set(long jarg1, ParticleSystemDef jarg1_, float jarg2);
  public final static native float ParticleSystemDef_ejectionStrength_get(long jarg1, ParticleSystemDef jarg1_);
  public final static native void ParticleSystemDef_staticPressureStrength_set(long jarg1, ParticleSystemDef jarg1_, float jarg2);
  public final static native float ParticleSystemDef_staticPressureStrength_get(long jarg1, ParticleSystemDef jarg1_);
  public final static native void ParticleSystemDef_staticPressureRelaxation_set(long jarg1, ParticleSystemDef jarg1_, float jarg2);
  public final static native float ParticleSystemDef_staticPressureRelaxation_get(long jarg1, ParticleSystemDef jarg1_);
  public final static native void ParticleSystemDef_staticPressureIterations_set(long jarg1, ParticleSystemDef jarg1_, int jarg2);
  public final static native int ParticleSystemDef_staticPressureIterations_get(long jarg1, ParticleSystemDef jarg1_);
  public final static native void ParticleSystemDef_colorMixingStrength_set(long jarg1, ParticleSystemDef jarg1_, float jarg2);
  public final static native float ParticleSystemDef_colorMixingStrength_get(long jarg1, ParticleSystemDef jarg1_);
  public final static native void ParticleSystemDef_destroyByAge_set(long jarg1, ParticleSystemDef jarg1_, boolean jarg2);
  public final static native boolean ParticleSystemDef_destroyByAge_get(long jarg1, ParticleSystemDef jarg1_);
  public final static native void ParticleSystemDef_lifetimeGranularity_set(long jarg1, ParticleSystemDef jarg1_, float jarg2);
  public final static native float ParticleSystemDef_lifetimeGranularity_get(long jarg1, ParticleSystemDef jarg1_);
  public final static native void delete_ParticleSystemDef(long jarg1);
  public final static native long new_ContactManager();
  public final static native void ContactManager_addPair(long jarg1, ContactManager jarg1_, java.lang.Object jarg2, java.lang.Object jarg3);
  public final static native void ContactManager_findNewContacts(long jarg1, ContactManager jarg1_);
  public final static native void ContactManager_destroy(long jarg1, ContactManager jarg1_, long jarg2, Contact jarg2_);
  public final static native void ContactManager_collide(long jarg1, ContactManager jarg1_);
  public final static native void ContactManager_broadPhase_set(long jarg1, ContactManager jarg1_, long jarg2);
  public final static native long ContactManager_broadPhase_get(long jarg1, ContactManager jarg1_);
  public final static native void ContactManager_contactList_set(long jarg1, ContactManager jarg1_, long jarg2, Contact jarg2_);
  public final static native long ContactManager_contactList_get(long jarg1, ContactManager jarg1_);
  public final static native void ContactManager_contactCount_set(long jarg1, ContactManager jarg1_, int jarg2);
  public final static native int ContactManager_contactCount_get(long jarg1, ContactManager jarg1_);
  public final static native void ContactManager_contactFilter_set(long jarg1, ContactManager jarg1_, long jarg2);
  public final static native long ContactManager_contactFilter_get(long jarg1, ContactManager jarg1_);
  public final static native void ContactManager_contactListener_set(long jarg1, ContactManager jarg1_, long jarg2, ContactListener jarg2_);
  public final static native long ContactManager_contactListener_get(long jarg1, ContactManager jarg1_);
  public final static native void ContactManager_allocator_set(long jarg1, ContactManager jarg1_, long jarg2);
  public final static native long ContactManager_allocator_get(long jarg1, ContactManager jarg1_);
  public final static native void delete_ContactManager(long jarg1);
  public final static native float b2MixFriction(float jarg1, float jarg2);
  public final static native float b2MixRestitution(float jarg1, float jarg2);
  public final static native void ContactRegister_createFcn_set(long jarg1, ContactRegister jarg1_, long jarg2);
  public final static native long ContactRegister_createFcn_get(long jarg1, ContactRegister jarg1_);
  public final static native void ContactRegister_destroyFcn_set(long jarg1, ContactRegister jarg1_, long jarg2);
  public final static native long ContactRegister_destroyFcn_get(long jarg1, ContactRegister jarg1_);
  public final static native void ContactRegister_primary_set(long jarg1, ContactRegister jarg1_, boolean jarg2);
  public final static native boolean ContactRegister_primary_get(long jarg1, ContactRegister jarg1_);
  public final static native long new_ContactRegister();
  public final static native void delete_ContactRegister(long jarg1);
  public final static native void ContactEdge_other_set(long jarg1, ContactEdge jarg1_, long jarg2, Body jarg2_);
  public final static native long ContactEdge_other_get(long jarg1, ContactEdge jarg1_);
  public final static native void ContactEdge_contact_set(long jarg1, ContactEdge jarg1_, long jarg2, Contact jarg2_);
  public final static native long ContactEdge_contact_get(long jarg1, ContactEdge jarg1_);
  public final static native void ContactEdge_prev_set(long jarg1, ContactEdge jarg1_, long jarg2, ContactEdge jarg2_);
  public final static native long ContactEdge_prev_get(long jarg1, ContactEdge jarg1_);
  public final static native void ContactEdge_next_set(long jarg1, ContactEdge jarg1_, long jarg2, ContactEdge jarg2_);
  public final static native long ContactEdge_next_get(long jarg1, ContactEdge jarg1_);
  public final static native long new_ContactEdge();
  public final static native void delete_ContactEdge(long jarg1);
  public final static native long Contact_getManifold__SWIG_0(long jarg1, Contact jarg1_);
  public final static native void Contact_getWorldManifold(long jarg1, Contact jarg1_, long jarg2);
  public final static native boolean Contact_isTouching(long jarg1, Contact jarg1_);
  public final static native void Contact_setEnabled(long jarg1, Contact jarg1_, boolean jarg2);
  public final static native boolean Contact_isEnabled(long jarg1, Contact jarg1_);
  public final static native long Contact_getNext__SWIG_0(long jarg1, Contact jarg1_);
  public final static native long Contact_getFixtureA__SWIG_0(long jarg1, Contact jarg1_);
  public final static native int Contact_getChildIndexA(long jarg1, Contact jarg1_);
  public final static native long Contact_getFixtureB__SWIG_0(long jarg1, Contact jarg1_);
  public final static native int Contact_getChildIndexB(long jarg1, Contact jarg1_);
  public final static native void Contact_setFriction(long jarg1, Contact jarg1_, float jarg2);
  public final static native float Contact_getFriction(long jarg1, Contact jarg1_);
  public final static native void Contact_resetFriction(long jarg1, Contact jarg1_);
  public final static native void Contact_setRestitution(long jarg1, Contact jarg1_, float jarg2);
  public final static native float Contact_getRestitution(long jarg1, Contact jarg1_);
  public final static native void Contact_resetRestitution(long jarg1, Contact jarg1_);
  public final static native void Contact_setTangentSpeed(long jarg1, Contact jarg1_, float jarg2);
  public final static native float Contact_getTangentSpeed(long jarg1, Contact jarg1_);
  public final static native void Contact_evaluate(long jarg1, Contact jarg1_, long jarg2, long jarg3, Transform jarg3_, long jarg4, Transform jarg4_);
  public final static native void Jacobian_linear_set(long jarg1, Jacobian jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long Jacobian_linear_get(long jarg1, Jacobian jarg1_);
  public final static native void Jacobian_angularA_set(long jarg1, Jacobian jarg1_, float jarg2);
  public final static native float Jacobian_angularA_get(long jarg1, Jacobian jarg1_);
  public final static native void Jacobian_angularB_set(long jarg1, Jacobian jarg1_, float jarg2);
  public final static native float Jacobian_angularB_get(long jarg1, Jacobian jarg1_);
  public final static native long new_Jacobian();
  public final static native void delete_Jacobian(long jarg1);
  public final static native void JointEdge_other_set(long jarg1, JointEdge jarg1_, long jarg2, Body jarg2_);
  public final static native long JointEdge_other_get(long jarg1, JointEdge jarg1_);
  public final static native void JointEdge_joint_set(long jarg1, JointEdge jarg1_, long jarg2, Joint jarg2_);
  public final static native long JointEdge_joint_get(long jarg1, JointEdge jarg1_);
  public final static native void JointEdge_prev_set(long jarg1, JointEdge jarg1_, long jarg2, JointEdge jarg2_);
  public final static native long JointEdge_prev_get(long jarg1, JointEdge jarg1_);
  public final static native void JointEdge_next_set(long jarg1, JointEdge jarg1_, long jarg2, JointEdge jarg2_);
  public final static native long JointEdge_next_get(long jarg1, JointEdge jarg1_);
  public final static native long new_JointEdge();
  public final static native void delete_JointEdge(long jarg1);
  public final static native long new_JointDef();
  public final static native void JointDef_type_set(long jarg1, JointDef jarg1_, int jarg2);
  public final static native int JointDef_type_get(long jarg1, JointDef jarg1_);
  public final static native void JointDef_userData_set(long jarg1, JointDef jarg1_, java.lang.Object jarg2);
  public final static native java.lang.Object JointDef_userData_get(long jarg1, JointDef jarg1_);
  public final static native void JointDef_bodyA_set(long jarg1, JointDef jarg1_, long jarg2, Body jarg2_);
  public final static native long JointDef_bodyA_get(long jarg1, JointDef jarg1_);
  public final static native void JointDef_bodyB_set(long jarg1, JointDef jarg1_, long jarg2, Body jarg2_);
  public final static native long JointDef_bodyB_get(long jarg1, JointDef jarg1_);
  public final static native void JointDef_collideConnected_set(long jarg1, JointDef jarg1_, boolean jarg2);
  public final static native boolean JointDef_collideConnected_get(long jarg1, JointDef jarg1_);
  public final static native void delete_JointDef(long jarg1);
  public final static native int Joint_getType(long jarg1, Joint jarg1_);
  public final static native long Joint_getBodyA(long jarg1, Joint jarg1_);
  public final static native long Joint_getBodyB(long jarg1, Joint jarg1_);
  public final static native long Joint_getAnchorA(long jarg1, Joint jarg1_);
  public final static native long Joint_getAnchorB(long jarg1, Joint jarg1_);
  public final static native long Joint_getReactionForce(long jarg1, Joint jarg1_, float jarg2);
  public final static native float Joint_getReactionTorque(long jarg1, Joint jarg1_, float jarg2);
  public final static native long Joint_getNext__SWIG_0(long jarg1, Joint jarg1_);
  public final static native java.lang.Object Joint_getUserData(long jarg1, Joint jarg1_);
  public final static native void Joint_setUserData(long jarg1, Joint jarg1_, java.lang.Object jarg2);
  public final static native boolean Joint_isActive(long jarg1, Joint jarg1_);
  public final static native boolean Joint_getCollideConnected(long jarg1, Joint jarg1_);
  public final static native void Joint_dump(long jarg1, Joint jarg1_);
  public final static native void Joint_shiftOrigin(long jarg1, Joint jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long new_DistanceJointDef();
  public final static native void DistanceJointDef_initialize(long jarg1, DistanceJointDef jarg1_, long jarg2, Body jarg2_, long jarg3, Body jarg3_, long jarg4, Vec2 jarg4_, long jarg5, Vec2 jarg5_);
  public final static native void DistanceJointDef_localAnchorA_set(long jarg1, DistanceJointDef jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long DistanceJointDef_localAnchorA_get(long jarg1, DistanceJointDef jarg1_);
  public final static native void DistanceJointDef_localAnchorB_set(long jarg1, DistanceJointDef jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long DistanceJointDef_localAnchorB_get(long jarg1, DistanceJointDef jarg1_);
  public final static native void DistanceJointDef_length_set(long jarg1, DistanceJointDef jarg1_, float jarg2);
  public final static native float DistanceJointDef_length_get(long jarg1, DistanceJointDef jarg1_);
  public final static native void DistanceJointDef_frequencyHz_set(long jarg1, DistanceJointDef jarg1_, float jarg2);
  public final static native float DistanceJointDef_frequencyHz_get(long jarg1, DistanceJointDef jarg1_);
  public final static native void DistanceJointDef_dampingRatio_set(long jarg1, DistanceJointDef jarg1_, float jarg2);
  public final static native float DistanceJointDef_dampingRatio_get(long jarg1, DistanceJointDef jarg1_);
  public final static native void DistanceJointDef_setLocalAnchorA(long jarg1, DistanceJointDef jarg1_, float jarg2, float jarg3);
  public final static native void DistanceJointDef_setLocalAnchorB(long jarg1, DistanceJointDef jarg1_, float jarg2, float jarg3);
  public final static native void delete_DistanceJointDef(long jarg1);
  public final static native long DistanceJoint_getAnchorA(long jarg1, DistanceJoint jarg1_);
  public final static native long DistanceJoint_getAnchorB(long jarg1, DistanceJoint jarg1_);
  public final static native long DistanceJoint_getReactionForce(long jarg1, DistanceJoint jarg1_, float jarg2);
  public final static native float DistanceJoint_getReactionTorque(long jarg1, DistanceJoint jarg1_, float jarg2);
  public final static native long DistanceJoint_getLocalAnchorA(long jarg1, DistanceJoint jarg1_);
  public final static native long DistanceJoint_getLocalAnchorB(long jarg1, DistanceJoint jarg1_);
  public final static native void DistanceJoint_setLength(long jarg1, DistanceJoint jarg1_, float jarg2);
  public final static native float DistanceJoint_getLength(long jarg1, DistanceJoint jarg1_);
  public final static native void DistanceJoint_setFrequency(long jarg1, DistanceJoint jarg1_, float jarg2);
  public final static native float DistanceJoint_getFrequency(long jarg1, DistanceJoint jarg1_);
  public final static native void DistanceJoint_setDampingRatio(long jarg1, DistanceJoint jarg1_, float jarg2);
  public final static native float DistanceJoint_getDampingRatio(long jarg1, DistanceJoint jarg1_);
  public final static native void DistanceJoint_dump(long jarg1, DistanceJoint jarg1_);
  public final static native void delete_DistanceJoint(long jarg1);
  public final static native long new_FrictionJointDef();
  public final static native void FrictionJointDef_initialize(long jarg1, FrictionJointDef jarg1_, long jarg2, Body jarg2_, long jarg3, Body jarg3_, long jarg4, Vec2 jarg4_);
  public final static native void FrictionJointDef_localAnchorA_set(long jarg1, FrictionJointDef jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long FrictionJointDef_localAnchorA_get(long jarg1, FrictionJointDef jarg1_);
  public final static native void FrictionJointDef_localAnchorB_set(long jarg1, FrictionJointDef jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long FrictionJointDef_localAnchorB_get(long jarg1, FrictionJointDef jarg1_);
  public final static native void FrictionJointDef_maxForce_set(long jarg1, FrictionJointDef jarg1_, float jarg2);
  public final static native float FrictionJointDef_maxForce_get(long jarg1, FrictionJointDef jarg1_);
  public final static native void FrictionJointDef_maxTorque_set(long jarg1, FrictionJointDef jarg1_, float jarg2);
  public final static native float FrictionJointDef_maxTorque_get(long jarg1, FrictionJointDef jarg1_);
  public final static native void delete_FrictionJointDef(long jarg1);
  public final static native long FrictionJoint_getAnchorA(long jarg1, FrictionJoint jarg1_);
  public final static native long FrictionJoint_getAnchorB(long jarg1, FrictionJoint jarg1_);
  public final static native long FrictionJoint_getReactionForce(long jarg1, FrictionJoint jarg1_, float jarg2);
  public final static native float FrictionJoint_getReactionTorque(long jarg1, FrictionJoint jarg1_, float jarg2);
  public final static native long FrictionJoint_getLocalAnchorA(long jarg1, FrictionJoint jarg1_);
  public final static native long FrictionJoint_getLocalAnchorB(long jarg1, FrictionJoint jarg1_);
  public final static native void FrictionJoint_setMaxForce(long jarg1, FrictionJoint jarg1_, float jarg2);
  public final static native float FrictionJoint_getMaxForce(long jarg1, FrictionJoint jarg1_);
  public final static native void FrictionJoint_setMaxTorque(long jarg1, FrictionJoint jarg1_, float jarg2);
  public final static native float FrictionJoint_getMaxTorque(long jarg1, FrictionJoint jarg1_);
  public final static native void FrictionJoint_dump(long jarg1, FrictionJoint jarg1_);
  public final static native void delete_FrictionJoint(long jarg1);
  public final static native long new_GearJointDef();
  public final static native void GearJointDef_joint1_set(long jarg1, GearJointDef jarg1_, long jarg2, Joint jarg2_);
  public final static native long GearJointDef_joint1_get(long jarg1, GearJointDef jarg1_);
  public final static native void GearJointDef_joint2_set(long jarg1, GearJointDef jarg1_, long jarg2, Joint jarg2_);
  public final static native long GearJointDef_joint2_get(long jarg1, GearJointDef jarg1_);
  public final static native void GearJointDef_ratio_set(long jarg1, GearJointDef jarg1_, float jarg2);
  public final static native float GearJointDef_ratio_get(long jarg1, GearJointDef jarg1_);
  public final static native void delete_GearJointDef(long jarg1);
  public final static native long GearJoint_getAnchorA(long jarg1, GearJoint jarg1_);
  public final static native long GearJoint_getAnchorB(long jarg1, GearJoint jarg1_);
  public final static native long GearJoint_getReactionForce(long jarg1, GearJoint jarg1_, float jarg2);
  public final static native float GearJoint_getReactionTorque(long jarg1, GearJoint jarg1_, float jarg2);
  public final static native long GearJoint_getJoint1(long jarg1, GearJoint jarg1_);
  public final static native long GearJoint_getJoint2(long jarg1, GearJoint jarg1_);
  public final static native void GearJoint_setRatio(long jarg1, GearJoint jarg1_, float jarg2);
  public final static native float GearJoint_getRatio(long jarg1, GearJoint jarg1_);
  public final static native void GearJoint_dump(long jarg1, GearJoint jarg1_);
  public final static native void delete_GearJoint(long jarg1);
  public final static native long new_MotorJointDef();
  public final static native void MotorJointDef_initialize(long jarg1, MotorJointDef jarg1_, long jarg2, Body jarg2_, long jarg3, Body jarg3_);
  public final static native void MotorJointDef_linearOffset_set(long jarg1, MotorJointDef jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long MotorJointDef_linearOffset_get(long jarg1, MotorJointDef jarg1_);
  public final static native void MotorJointDef_angularOffset_set(long jarg1, MotorJointDef jarg1_, float jarg2);
  public final static native float MotorJointDef_angularOffset_get(long jarg1, MotorJointDef jarg1_);
  public final static native void MotorJointDef_maxForce_set(long jarg1, MotorJointDef jarg1_, float jarg2);
  public final static native float MotorJointDef_maxForce_get(long jarg1, MotorJointDef jarg1_);
  public final static native void MotorJointDef_maxTorque_set(long jarg1, MotorJointDef jarg1_, float jarg2);
  public final static native float MotorJointDef_maxTorque_get(long jarg1, MotorJointDef jarg1_);
  public final static native void MotorJointDef_correctionFactor_set(long jarg1, MotorJointDef jarg1_, float jarg2);
  public final static native float MotorJointDef_correctionFactor_get(long jarg1, MotorJointDef jarg1_);
  public final static native void delete_MotorJointDef(long jarg1);
  public final static native long MotorJoint_getAnchorA(long jarg1, MotorJoint jarg1_);
  public final static native long MotorJoint_getAnchorB(long jarg1, MotorJoint jarg1_);
  public final static native long MotorJoint_getReactionForce(long jarg1, MotorJoint jarg1_, float jarg2);
  public final static native float MotorJoint_getReactionTorque(long jarg1, MotorJoint jarg1_, float jarg2);
  public final static native void MotorJoint_setLinearOffset(long jarg1, MotorJoint jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long MotorJoint_getLinearOffset(long jarg1, MotorJoint jarg1_);
  public final static native void MotorJoint_setAngularOffset(long jarg1, MotorJoint jarg1_, float jarg2);
  public final static native float MotorJoint_getAngularOffset(long jarg1, MotorJoint jarg1_);
  public final static native void MotorJoint_setMaxForce(long jarg1, MotorJoint jarg1_, float jarg2);
  public final static native float MotorJoint_getMaxForce(long jarg1, MotorJoint jarg1_);
  public final static native void MotorJoint_setMaxTorque(long jarg1, MotorJoint jarg1_, float jarg2);
  public final static native float MotorJoint_getMaxTorque(long jarg1, MotorJoint jarg1_);
  public final static native void MotorJoint_setCorrectionFactor(long jarg1, MotorJoint jarg1_, float jarg2);
  public final static native float MotorJoint_getCorrectionFactor(long jarg1, MotorJoint jarg1_);
  public final static native void MotorJoint_dump(long jarg1, MotorJoint jarg1_);
  public final static native void delete_MotorJoint(long jarg1);
  public final static native long new_MouseJointDef();
  public final static native void MouseJointDef_target_set(long jarg1, MouseJointDef jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long MouseJointDef_target_get(long jarg1, MouseJointDef jarg1_);
  public final static native void MouseJointDef_maxForce_set(long jarg1, MouseJointDef jarg1_, float jarg2);
  public final static native float MouseJointDef_maxForce_get(long jarg1, MouseJointDef jarg1_);
  public final static native void MouseJointDef_frequencyHz_set(long jarg1, MouseJointDef jarg1_, float jarg2);
  public final static native float MouseJointDef_frequencyHz_get(long jarg1, MouseJointDef jarg1_);
  public final static native void MouseJointDef_dampingRatio_set(long jarg1, MouseJointDef jarg1_, float jarg2);
  public final static native float MouseJointDef_dampingRatio_get(long jarg1, MouseJointDef jarg1_);
  public final static native void MouseJointDef_setTarget(long jarg1, MouseJointDef jarg1_, float jarg2, float jarg3);
  public final static native void delete_MouseJointDef(long jarg1);
  public final static native long MouseJoint_getAnchorA(long jarg1, MouseJoint jarg1_);
  public final static native long MouseJoint_getAnchorB(long jarg1, MouseJoint jarg1_);
  public final static native long MouseJoint_getReactionForce(long jarg1, MouseJoint jarg1_, float jarg2);
  public final static native float MouseJoint_getReactionTorque(long jarg1, MouseJoint jarg1_, float jarg2);
  public final static native void MouseJoint_setTarget__SWIG_0(long jarg1, MouseJoint jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long MouseJoint_getTarget(long jarg1, MouseJoint jarg1_);
  public final static native void MouseJoint_setTarget__SWIG_1(long jarg1, MouseJoint jarg1_, float jarg2, float jarg3);
  public final static native void MouseJoint_setMaxForce(long jarg1, MouseJoint jarg1_, float jarg2);
  public final static native float MouseJoint_getMaxForce(long jarg1, MouseJoint jarg1_);
  public final static native void MouseJoint_setFrequency(long jarg1, MouseJoint jarg1_, float jarg2);
  public final static native float MouseJoint_getFrequency(long jarg1, MouseJoint jarg1_);
  public final static native void MouseJoint_setDampingRatio(long jarg1, MouseJoint jarg1_, float jarg2);
  public final static native float MouseJoint_getDampingRatio(long jarg1, MouseJoint jarg1_);
  public final static native void MouseJoint_dump(long jarg1, MouseJoint jarg1_);
  public final static native void MouseJoint_shiftOrigin(long jarg1, MouseJoint jarg1_, long jarg2, Vec2 jarg2_);
  public final static native void delete_MouseJoint(long jarg1);
  public final static native long new_PrismaticJointDef();
  public final static native void PrismaticJointDef_initialize(long jarg1, PrismaticJointDef jarg1_, long jarg2, Body jarg2_, long jarg3, Body jarg3_, long jarg4, Vec2 jarg4_, long jarg5, Vec2 jarg5_);
  public final static native void PrismaticJointDef_localAnchorA_set(long jarg1, PrismaticJointDef jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long PrismaticJointDef_localAnchorA_get(long jarg1, PrismaticJointDef jarg1_);
  public final static native void PrismaticJointDef_localAnchorB_set(long jarg1, PrismaticJointDef jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long PrismaticJointDef_localAnchorB_get(long jarg1, PrismaticJointDef jarg1_);
  public final static native void PrismaticJointDef_localAxisA_set(long jarg1, PrismaticJointDef jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long PrismaticJointDef_localAxisA_get(long jarg1, PrismaticJointDef jarg1_);
  public final static native void PrismaticJointDef_referenceAngle_set(long jarg1, PrismaticJointDef jarg1_, float jarg2);
  public final static native float PrismaticJointDef_referenceAngle_get(long jarg1, PrismaticJointDef jarg1_);
  public final static native void PrismaticJointDef_enableLimit_set(long jarg1, PrismaticJointDef jarg1_, boolean jarg2);
  public final static native boolean PrismaticJointDef_enableLimit_get(long jarg1, PrismaticJointDef jarg1_);
  public final static native void PrismaticJointDef_lowerTranslation_set(long jarg1, PrismaticJointDef jarg1_, float jarg2);
  public final static native float PrismaticJointDef_lowerTranslation_get(long jarg1, PrismaticJointDef jarg1_);
  public final static native void PrismaticJointDef_upperTranslation_set(long jarg1, PrismaticJointDef jarg1_, float jarg2);
  public final static native float PrismaticJointDef_upperTranslation_get(long jarg1, PrismaticJointDef jarg1_);
  public final static native void PrismaticJointDef_enableMotor_set(long jarg1, PrismaticJointDef jarg1_, boolean jarg2);
  public final static native boolean PrismaticJointDef_enableMotor_get(long jarg1, PrismaticJointDef jarg1_);
  public final static native void PrismaticJointDef_maxMotorForce_set(long jarg1, PrismaticJointDef jarg1_, float jarg2);
  public final static native float PrismaticJointDef_maxMotorForce_get(long jarg1, PrismaticJointDef jarg1_);
  public final static native void PrismaticJointDef_motorSpeed_set(long jarg1, PrismaticJointDef jarg1_, float jarg2);
  public final static native float PrismaticJointDef_motorSpeed_get(long jarg1, PrismaticJointDef jarg1_);
  public final static native void PrismaticJointDef_setLocalAnchorA(long jarg1, PrismaticJointDef jarg1_, float jarg2, float jarg3);
  public final static native void PrismaticJointDef_setLocalAnchorB(long jarg1, PrismaticJointDef jarg1_, float jarg2, float jarg3);
  public final static native void PrismaticJointDef_setLocalAxisA(long jarg1, PrismaticJointDef jarg1_, float jarg2, float jarg3);
  public final static native void delete_PrismaticJointDef(long jarg1);
  public final static native long PrismaticJoint_getAnchorA(long jarg1, PrismaticJoint jarg1_);
  public final static native long PrismaticJoint_getAnchorB(long jarg1, PrismaticJoint jarg1_);
  public final static native long PrismaticJoint_getReactionForce(long jarg1, PrismaticJoint jarg1_, float jarg2);
  public final static native float PrismaticJoint_getReactionTorque(long jarg1, PrismaticJoint jarg1_, float jarg2);
  public final static native long PrismaticJoint_getLocalAnchorA(long jarg1, PrismaticJoint jarg1_);
  public final static native long PrismaticJoint_getLocalAnchorB(long jarg1, PrismaticJoint jarg1_);
  public final static native long PrismaticJoint_getLocalAxisA(long jarg1, PrismaticJoint jarg1_);
  public final static native float PrismaticJoint_getReferenceAngle(long jarg1, PrismaticJoint jarg1_);
  public final static native float PrismaticJoint_getJointTranslation(long jarg1, PrismaticJoint jarg1_);
  public final static native float PrismaticJoint_getJointSpeed(long jarg1, PrismaticJoint jarg1_);
  public final static native boolean PrismaticJoint_isLimitEnabled(long jarg1, PrismaticJoint jarg1_);
  public final static native void PrismaticJoint_enableLimit(long jarg1, PrismaticJoint jarg1_, boolean jarg2);
  public final static native float PrismaticJoint_getLowerLimit(long jarg1, PrismaticJoint jarg1_);
  public final static native float PrismaticJoint_getUpperLimit(long jarg1, PrismaticJoint jarg1_);
  public final static native void PrismaticJoint_setLimits(long jarg1, PrismaticJoint jarg1_, float jarg2, float jarg3);
  public final static native boolean PrismaticJoint_isMotorEnabled(long jarg1, PrismaticJoint jarg1_);
  public final static native void PrismaticJoint_enableMotor(long jarg1, PrismaticJoint jarg1_, boolean jarg2);
  public final static native void PrismaticJoint_setMotorSpeed(long jarg1, PrismaticJoint jarg1_, float jarg2);
  public final static native float PrismaticJoint_getMotorSpeed(long jarg1, PrismaticJoint jarg1_);
  public final static native void PrismaticJoint_setMaxMotorForce(long jarg1, PrismaticJoint jarg1_, float jarg2);
  public final static native float PrismaticJoint_getMaxMotorForce(long jarg1, PrismaticJoint jarg1_);
  public final static native float PrismaticJoint_getMotorForce(long jarg1, PrismaticJoint jarg1_, float jarg2);
  public final static native void PrismaticJoint_dump(long jarg1, PrismaticJoint jarg1_);
  public final static native void delete_PrismaticJoint(long jarg1);
  public final static native float b2_minPulleyLength_get();
  public final static native long new_PulleyJointDef();
  public final static native void PulleyJointDef_initialize(long jarg1, PulleyJointDef jarg1_, long jarg2, Body jarg2_, long jarg3, Body jarg3_, long jarg4, Vec2 jarg4_, long jarg5, Vec2 jarg5_, long jarg6, Vec2 jarg6_, long jarg7, Vec2 jarg7_, float jarg8);
  public final static native void PulleyJointDef_groundAnchorA_set(long jarg1, PulleyJointDef jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long PulleyJointDef_groundAnchorA_get(long jarg1, PulleyJointDef jarg1_);
  public final static native void PulleyJointDef_groundAnchorB_set(long jarg1, PulleyJointDef jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long PulleyJointDef_groundAnchorB_get(long jarg1, PulleyJointDef jarg1_);
  public final static native void PulleyJointDef_localAnchorA_set(long jarg1, PulleyJointDef jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long PulleyJointDef_localAnchorA_get(long jarg1, PulleyJointDef jarg1_);
  public final static native void PulleyJointDef_localAnchorB_set(long jarg1, PulleyJointDef jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long PulleyJointDef_localAnchorB_get(long jarg1, PulleyJointDef jarg1_);
  public final static native void PulleyJointDef_lengthA_set(long jarg1, PulleyJointDef jarg1_, float jarg2);
  public final static native float PulleyJointDef_lengthA_get(long jarg1, PulleyJointDef jarg1_);
  public final static native void PulleyJointDef_lengthB_set(long jarg1, PulleyJointDef jarg1_, float jarg2);
  public final static native float PulleyJointDef_lengthB_get(long jarg1, PulleyJointDef jarg1_);
  public final static native void PulleyJointDef_ratio_set(long jarg1, PulleyJointDef jarg1_, float jarg2);
  public final static native float PulleyJointDef_ratio_get(long jarg1, PulleyJointDef jarg1_);
  public final static native void delete_PulleyJointDef(long jarg1);
  public final static native long PulleyJoint_getAnchorA(long jarg1, PulleyJoint jarg1_);
  public final static native long PulleyJoint_getAnchorB(long jarg1, PulleyJoint jarg1_);
  public final static native long PulleyJoint_getReactionForce(long jarg1, PulleyJoint jarg1_, float jarg2);
  public final static native float PulleyJoint_getReactionTorque(long jarg1, PulleyJoint jarg1_, float jarg2);
  public final static native long PulleyJoint_getGroundAnchorA(long jarg1, PulleyJoint jarg1_);
  public final static native long PulleyJoint_getGroundAnchorB(long jarg1, PulleyJoint jarg1_);
  public final static native float PulleyJoint_getLengthA(long jarg1, PulleyJoint jarg1_);
  public final static native float PulleyJoint_getLengthB(long jarg1, PulleyJoint jarg1_);
  public final static native float PulleyJoint_getRatio(long jarg1, PulleyJoint jarg1_);
  public final static native float PulleyJoint_getCurrentLengthA(long jarg1, PulleyJoint jarg1_);
  public final static native float PulleyJoint_getCurrentLengthB(long jarg1, PulleyJoint jarg1_);
  public final static native void PulleyJoint_dump(long jarg1, PulleyJoint jarg1_);
  public final static native void PulleyJoint_shiftOrigin(long jarg1, PulleyJoint jarg1_, long jarg2, Vec2 jarg2_);
  public final static native void delete_PulleyJoint(long jarg1);
  public final static native long new_RevoluteJointDef();
  public final static native void RevoluteJointDef_initialize(long jarg1, RevoluteJointDef jarg1_, long jarg2, Body jarg2_, long jarg3, Body jarg3_, long jarg4, Vec2 jarg4_);
  public final static native void RevoluteJointDef_localAnchorA_set(long jarg1, RevoluteJointDef jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long RevoluteJointDef_localAnchorA_get(long jarg1, RevoluteJointDef jarg1_);
  public final static native void RevoluteJointDef_localAnchorB_set(long jarg1, RevoluteJointDef jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long RevoluteJointDef_localAnchorB_get(long jarg1, RevoluteJointDef jarg1_);
  public final static native void RevoluteJointDef_referenceAngle_set(long jarg1, RevoluteJointDef jarg1_, float jarg2);
  public final static native float RevoluteJointDef_referenceAngle_get(long jarg1, RevoluteJointDef jarg1_);
  public final static native void RevoluteJointDef_enableLimit_set(long jarg1, RevoluteJointDef jarg1_, boolean jarg2);
  public final static native boolean RevoluteJointDef_enableLimit_get(long jarg1, RevoluteJointDef jarg1_);
  public final static native void RevoluteJointDef_lowerAngle_set(long jarg1, RevoluteJointDef jarg1_, float jarg2);
  public final static native float RevoluteJointDef_lowerAngle_get(long jarg1, RevoluteJointDef jarg1_);
  public final static native void RevoluteJointDef_upperAngle_set(long jarg1, RevoluteJointDef jarg1_, float jarg2);
  public final static native float RevoluteJointDef_upperAngle_get(long jarg1, RevoluteJointDef jarg1_);
  public final static native void RevoluteJointDef_enableMotor_set(long jarg1, RevoluteJointDef jarg1_, boolean jarg2);
  public final static native boolean RevoluteJointDef_enableMotor_get(long jarg1, RevoluteJointDef jarg1_);
  public final static native void RevoluteJointDef_motorSpeed_set(long jarg1, RevoluteJointDef jarg1_, float jarg2);
  public final static native float RevoluteJointDef_motorSpeed_get(long jarg1, RevoluteJointDef jarg1_);
  public final static native void RevoluteJointDef_maxMotorTorque_set(long jarg1, RevoluteJointDef jarg1_, float jarg2);
  public final static native float RevoluteJointDef_maxMotorTorque_get(long jarg1, RevoluteJointDef jarg1_);
  public final static native void delete_RevoluteJointDef(long jarg1);
  public final static native long RevoluteJoint_getAnchorA(long jarg1, RevoluteJoint jarg1_);
  public final static native long RevoluteJoint_getAnchorB(long jarg1, RevoluteJoint jarg1_);
  public final static native long RevoluteJoint_getLocalAnchorA(long jarg1, RevoluteJoint jarg1_);
  public final static native long RevoluteJoint_getLocalAnchorB(long jarg1, RevoluteJoint jarg1_);
  public final static native float RevoluteJoint_getReferenceAngle(long jarg1, RevoluteJoint jarg1_);
  public final static native float RevoluteJoint_getJointAngle(long jarg1, RevoluteJoint jarg1_);
  public final static native float RevoluteJoint_getJointSpeed(long jarg1, RevoluteJoint jarg1_);
  public final static native boolean RevoluteJoint_isLimitEnabled(long jarg1, RevoluteJoint jarg1_);
  public final static native void RevoluteJoint_enableLimit(long jarg1, RevoluteJoint jarg1_, boolean jarg2);
  public final static native float RevoluteJoint_getLowerLimit(long jarg1, RevoluteJoint jarg1_);
  public final static native float RevoluteJoint_getUpperLimit(long jarg1, RevoluteJoint jarg1_);
  public final static native void RevoluteJoint_setLimits(long jarg1, RevoluteJoint jarg1_, float jarg2, float jarg3);
  public final static native boolean RevoluteJoint_isMotorEnabled(long jarg1, RevoluteJoint jarg1_);
  public final static native void RevoluteJoint_enableMotor(long jarg1, RevoluteJoint jarg1_, boolean jarg2);
  public final static native void RevoluteJoint_setMotorSpeed(long jarg1, RevoluteJoint jarg1_, float jarg2);
  public final static native float RevoluteJoint_getMotorSpeed(long jarg1, RevoluteJoint jarg1_);
  public final static native void RevoluteJoint_setMaxMotorTorque(long jarg1, RevoluteJoint jarg1_, float jarg2);
  public final static native float RevoluteJoint_getMaxMotorTorque(long jarg1, RevoluteJoint jarg1_);
  public final static native long RevoluteJoint_getReactionForce(long jarg1, RevoluteJoint jarg1_, float jarg2);
  public final static native float RevoluteJoint_getReactionTorque(long jarg1, RevoluteJoint jarg1_, float jarg2);
  public final static native float RevoluteJoint_getMotorTorque(long jarg1, RevoluteJoint jarg1_, float jarg2);
  public final static native void RevoluteJoint_dump(long jarg1, RevoluteJoint jarg1_);
  public final static native void delete_RevoluteJoint(long jarg1);
  public final static native long new_RopeJointDef();
  public final static native void RopeJointDef_localAnchorA_set(long jarg1, RopeJointDef jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long RopeJointDef_localAnchorA_get(long jarg1, RopeJointDef jarg1_);
  public final static native void RopeJointDef_localAnchorB_set(long jarg1, RopeJointDef jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long RopeJointDef_localAnchorB_get(long jarg1, RopeJointDef jarg1_);
  public final static native void RopeJointDef_maxLength_set(long jarg1, RopeJointDef jarg1_, float jarg2);
  public final static native float RopeJointDef_maxLength_get(long jarg1, RopeJointDef jarg1_);
  public final static native void delete_RopeJointDef(long jarg1);
  public final static native long RopeJoint_getAnchorA(long jarg1, RopeJoint jarg1_);
  public final static native long RopeJoint_getAnchorB(long jarg1, RopeJoint jarg1_);
  public final static native long RopeJoint_getReactionForce(long jarg1, RopeJoint jarg1_, float jarg2);
  public final static native float RopeJoint_getReactionTorque(long jarg1, RopeJoint jarg1_, float jarg2);
  public final static native long RopeJoint_getLocalAnchorA(long jarg1, RopeJoint jarg1_);
  public final static native long RopeJoint_getLocalAnchorB(long jarg1, RopeJoint jarg1_);
  public final static native void RopeJoint_setMaxLength(long jarg1, RopeJoint jarg1_, float jarg2);
  public final static native float RopeJoint_getMaxLength(long jarg1, RopeJoint jarg1_);
  public final static native int RopeJoint_getLimitState(long jarg1, RopeJoint jarg1_);
  public final static native void RopeJoint_dump(long jarg1, RopeJoint jarg1_);
  public final static native void delete_RopeJoint(long jarg1);
  public final static native long new_WeldJointDef();
  public final static native void WeldJointDef_initialize(long jarg1, WeldJointDef jarg1_, long jarg2, Body jarg2_, long jarg3, Body jarg3_, long jarg4, Vec2 jarg4_);
  public final static native void WeldJointDef_localAnchorA_set(long jarg1, WeldJointDef jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long WeldJointDef_localAnchorA_get(long jarg1, WeldJointDef jarg1_);
  public final static native void WeldJointDef_localAnchorB_set(long jarg1, WeldJointDef jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long WeldJointDef_localAnchorB_get(long jarg1, WeldJointDef jarg1_);
  public final static native void WeldJointDef_referenceAngle_set(long jarg1, WeldJointDef jarg1_, float jarg2);
  public final static native float WeldJointDef_referenceAngle_get(long jarg1, WeldJointDef jarg1_);
  public final static native void WeldJointDef_frequencyHz_set(long jarg1, WeldJointDef jarg1_, float jarg2);
  public final static native float WeldJointDef_frequencyHz_get(long jarg1, WeldJointDef jarg1_);
  public final static native void WeldJointDef_dampingRatio_set(long jarg1, WeldJointDef jarg1_, float jarg2);
  public final static native float WeldJointDef_dampingRatio_get(long jarg1, WeldJointDef jarg1_);
  public final static native void delete_WeldJointDef(long jarg1);
  public final static native long WeldJoint_getAnchorA(long jarg1, WeldJoint jarg1_);
  public final static native long WeldJoint_getAnchorB(long jarg1, WeldJoint jarg1_);
  public final static native long WeldJoint_getReactionForce(long jarg1, WeldJoint jarg1_, float jarg2);
  public final static native float WeldJoint_getReactionTorque(long jarg1, WeldJoint jarg1_, float jarg2);
  public final static native long WeldJoint_getLocalAnchorA(long jarg1, WeldJoint jarg1_);
  public final static native long WeldJoint_getLocalAnchorB(long jarg1, WeldJoint jarg1_);
  public final static native float WeldJoint_getReferenceAngle(long jarg1, WeldJoint jarg1_);
  public final static native void WeldJoint_setFrequency(long jarg1, WeldJoint jarg1_, float jarg2);
  public final static native float WeldJoint_getFrequency(long jarg1, WeldJoint jarg1_);
  public final static native void WeldJoint_setDampingRatio(long jarg1, WeldJoint jarg1_, float jarg2);
  public final static native float WeldJoint_getDampingRatio(long jarg1, WeldJoint jarg1_);
  public final static native void WeldJoint_dump(long jarg1, WeldJoint jarg1_);
  public final static native void delete_WeldJoint(long jarg1);
  public final static native long new_WheelJointDef();
  public final static native void WheelJointDef_initialize(long jarg1, WheelJointDef jarg1_, long jarg2, Body jarg2_, long jarg3, Body jarg3_, long jarg4, Vec2 jarg4_, long jarg5, Vec2 jarg5_);
  public final static native void WheelJointDef_localAnchorA_set(long jarg1, WheelJointDef jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long WheelJointDef_localAnchorA_get(long jarg1, WheelJointDef jarg1_);
  public final static native void WheelJointDef_localAnchorB_set(long jarg1, WheelJointDef jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long WheelJointDef_localAnchorB_get(long jarg1, WheelJointDef jarg1_);
  public final static native void WheelJointDef_localAxisA_set(long jarg1, WheelJointDef jarg1_, long jarg2, Vec2 jarg2_);
  public final static native long WheelJointDef_localAxisA_get(long jarg1, WheelJointDef jarg1_);
  public final static native void WheelJointDef_enableMotor_set(long jarg1, WheelJointDef jarg1_, boolean jarg2);
  public final static native boolean WheelJointDef_enableMotor_get(long jarg1, WheelJointDef jarg1_);
  public final static native void WheelJointDef_maxMotorTorque_set(long jarg1, WheelJointDef jarg1_, float jarg2);
  public final static native float WheelJointDef_maxMotorTorque_get(long jarg1, WheelJointDef jarg1_);
  public final static native void WheelJointDef_motorSpeed_set(long jarg1, WheelJointDef jarg1_, float jarg2);
  public final static native float WheelJointDef_motorSpeed_get(long jarg1, WheelJointDef jarg1_);
  public final static native void WheelJointDef_frequencyHz_set(long jarg1, WheelJointDef jarg1_, float jarg2);
  public final static native float WheelJointDef_frequencyHz_get(long jarg1, WheelJointDef jarg1_);
  public final static native void WheelJointDef_dampingRatio_set(long jarg1, WheelJointDef jarg1_, float jarg2);
  public final static native float WheelJointDef_dampingRatio_get(long jarg1, WheelJointDef jarg1_);
  public final static native void delete_WheelJointDef(long jarg1);
  public final static native long WheelJoint_getAnchorA(long jarg1, WheelJoint jarg1_);
  public final static native long WheelJoint_getAnchorB(long jarg1, WheelJoint jarg1_);
  public final static native long WheelJoint_getReactionForce(long jarg1, WheelJoint jarg1_, float jarg2);
  public final static native float WheelJoint_getReactionTorque(long jarg1, WheelJoint jarg1_, float jarg2);
  public final static native long WheelJoint_getLocalAnchorA(long jarg1, WheelJoint jarg1_);
  public final static native long WheelJoint_getLocalAnchorB(long jarg1, WheelJoint jarg1_);
  public final static native long WheelJoint_getLocalAxisA(long jarg1, WheelJoint jarg1_);
  public final static native float WheelJoint_getJointTranslation(long jarg1, WheelJoint jarg1_);
  public final static native float WheelJoint_getJointSpeed(long jarg1, WheelJoint jarg1_);
  public final static native boolean WheelJoint_isMotorEnabled(long jarg1, WheelJoint jarg1_);
  public final static native void WheelJoint_enableMotor(long jarg1, WheelJoint jarg1_, boolean jarg2);
  public final static native void WheelJoint_setMotorSpeed(long jarg1, WheelJoint jarg1_, float jarg2);
  public final static native float WheelJoint_getMotorSpeed(long jarg1, WheelJoint jarg1_);
  public final static native void WheelJoint_setMaxMotorTorque(long jarg1, WheelJoint jarg1_, float jarg2);
  public final static native float WheelJoint_getMaxMotorTorque(long jarg1, WheelJoint jarg1_);
  public final static native float WheelJoint_getMotorTorque(long jarg1, WheelJoint jarg1_, float jarg2);
  public final static native void WheelJoint_setSpringFrequencyHz(long jarg1, WheelJoint jarg1_, float jarg2);
  public final static native float WheelJoint_getSpringFrequencyHz(long jarg1, WheelJoint jarg1_);
  public final static native void WheelJoint_setSpringDampingRatio(long jarg1, WheelJoint jarg1_, float jarg2);
  public final static native float WheelJoint_getSpringDampingRatio(long jarg1, WheelJoint jarg1_);
  public final static native void WheelJoint_dump(long jarg1, WheelJoint jarg1_);
  public final static native void delete_WheelJoint(long jarg1);
  public final static native long CircleShape_SWIGUpcast(long jarg1);
  public final static native long EdgeShape_SWIGUpcast(long jarg1);
  public final static native long PolygonShape_SWIGUpcast(long jarg1);
  public final static native long DistanceJointDef_SWIGUpcast(long jarg1);
  public final static native long DistanceJoint_SWIGUpcast(long jarg1);
  public final static native long FrictionJointDef_SWIGUpcast(long jarg1);
  public final static native long FrictionJoint_SWIGUpcast(long jarg1);
  public final static native long GearJointDef_SWIGUpcast(long jarg1);
  public final static native long GearJoint_SWIGUpcast(long jarg1);
  public final static native long MotorJointDef_SWIGUpcast(long jarg1);
  public final static native long MotorJoint_SWIGUpcast(long jarg1);
  public final static native long MouseJointDef_SWIGUpcast(long jarg1);
  public final static native long MouseJoint_SWIGUpcast(long jarg1);
  public final static native long PrismaticJointDef_SWIGUpcast(long jarg1);
  public final static native long PrismaticJoint_SWIGUpcast(long jarg1);
  public final static native long PulleyJointDef_SWIGUpcast(long jarg1);
  public final static native long PulleyJoint_SWIGUpcast(long jarg1);
  public final static native long RevoluteJointDef_SWIGUpcast(long jarg1);
  public final static native long RevoluteJoint_SWIGUpcast(long jarg1);
  public final static native long RopeJointDef_SWIGUpcast(long jarg1);
  public final static native long RopeJoint_SWIGUpcast(long jarg1);
  public final static native long WeldJointDef_SWIGUpcast(long jarg1);
  public final static native long WeldJoint_SWIGUpcast(long jarg1);
  public final static native long WheelJointDef_SWIGUpcast(long jarg1);
  public final static native long WheelJoint_SWIGUpcast(long jarg1);

  public static boolean SwigDirector_QueryCallback_reportFixture(QueryCallback jself, long fixture) {
    return jself.reportFixture((fixture == 0) ? null : new Fixture(fixture, false));
  }
  public static boolean SwigDirector_QueryCallback_reportParticle(QueryCallback jself, long particleSystem, int index) {
    return jself.reportParticle((particleSystem == 0) ? null : new ParticleSystem(particleSystem, false), index);
  }
  public static float SwigDirector_RayCastCallback_reportFixture(RayCastCallback jself, long fixture, long point, long normal, float fraction) {
    return jself.reportFixture((fixture == 0) ? null : new Fixture(fixture, false), new Vec2(point, false), new Vec2(normal, false), fraction);
  }
  public static float SwigDirector_RayCastCallback_reportParticle(RayCastCallback jself, long particleSystem, int index, long point, long normal, float fraction) {
    return jself.reportParticle((particleSystem == 0) ? null : new ParticleSystem(particleSystem, false), index, new Vec2(point, false), new Vec2(normal, false), fraction);
  }
  public static void SwigDirector_ContactListener_beginContact(ContactListener jself, long contact) {
    jself.beginContact((contact == 0) ? null : new Contact(contact, false));
  }
  public static void SwigDirector_ContactListener_endContact(ContactListener jself, long contact) {
    jself.endContact((contact == 0) ? null : new Contact(contact, false));
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
